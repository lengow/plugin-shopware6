(function(){var e={9317:function(){},9629:function(){},511:function(){},7160:function(){},5581:function(){},7587:function(){},4352:function(){},2610:function(){},8421:function(){},2816:function(){},835:function(){},9249:function(){},6663:function(){},2087:function(){},5218:function(){},6040:function(){},3029:function(){},5779:function(){},8871:function(){},6908:function(){},4185:function(){},3996:function(){},2559:function(){},6600:function(){},3517:function(){},9973:function(){},9540:function(){},121:function(){},358:function(){},7266:function(e,t,n){var o=n(9317);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("145e4499",o,!0,{})},4576:function(e,t,n){var o=n(9629);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("8c852aae",o,!0,{})},3160:function(e,t,n){var o=n(511);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("b7e45248",o,!0,{})},8271:function(e,t,n){var o=n(7160);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("6b2d6e3c",o,!0,{})},6366:function(e,t,n){var o=n(5581);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("1c023320",o,!0,{})},6018:function(e,t,n){var o=n(7587);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("0011952a",o,!0,{})},5269:function(e,t,n){var o=n(4352);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("19e6ca20",o,!0,{})},8927:function(e,t,n){var o=n(2610);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("3b88f2ee",o,!0,{})},3675:function(e,t,n){var o=n(8421);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("20c36fd5",o,!0,{})},9735:function(e,t,n){var o=n(2816);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("920b2396",o,!0,{})},679:function(e,t,n){var o=n(835);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("137c5b44",o,!0,{})},5885:function(e,t,n){var o=n(9249);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("6e37feca",o,!0,{})},35:function(e,t,n){var o=n(6663);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("34c4db74",o,!0,{})},8204:function(e,t,n){var o=n(2087);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("03f42f2e",o,!0,{})},3989:function(e,t,n){var o=n(5218);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("e70ef44e",o,!0,{})},7099:function(e,t,n){var o=n(6040);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("59f4bb27",o,!0,{})},9073:function(e,t,n){var o=n(3029);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("3d8afb28",o,!0,{})},6649:function(e,t,n){var o=n(5779);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("3a75169e",o,!0,{})},7646:function(e,t,n){var o=n(8871);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("5148a756",o,!0,{})},6416:function(e,t,n){var o=n(6908);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("174ac9f4",o,!0,{})},9781:function(e,t,n){var o=n(4185);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("506a4bc0",o,!0,{})},6136:function(e,t,n){var o=n(3996);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("0e8059d6",o,!0,{})},4901:function(e,t,n){var o=n(2559);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("1acc3b28",o,!0,{})},4408:function(e,t,n){var o=n(6600);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("d985ad86",o,!0,{})},9527:function(e,t,n){var o=n(3517);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("d0d6c952",o,!0,{})},9964:function(e,t,n){var o=n(9973);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("92e0efe8",o,!0,{})},8293:function(e,t,n){var o=n(9540);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("0f237cf1",o,!0,{})},1555:function(e,t,n){var o=n(121);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("da51b00c",o,!0,{})},0:function(e,t,n){var o=n(358);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(5346).Z("4ee3b41c",o,!0,{})},5346:function(e,t,n){"use strict";function o(e,t){for(var n=[],o={},i=0;i<t.length;i++){var l=t[i],a=l[0],r={id:e+":"+i,css:l[1],media:l[2],sourceMap:l[3]};o[a]?o[a].parts.push(r):n.push(o[a]={id:a,parts:[r]})}return n}n.d(t,{Z:function(){return w}});var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var l={},a=i&&(document.head||document.getElementsByTagName("head")[0]),r=null,s=0,c=!1,d=function(){},g=null,p="data-vue-ssr-id",h="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function w(e,t,n,i){c=n,g=i||{};var a=o(e,t);return u(a),function(t){for(var n=[],i=0;i<a.length;i++){var r=l[a[i].id];r.refs--,n.push(r)}t?u(a=o(e,t)):a=[];for(var i=0;i<n.length;i++){var r=n[i];if(0===r.refs){for(var s=0;s<r.parts.length;s++)r.parts[s]();delete l[r.id]}}}}function u(e){for(var t=0;t<e.length;t++){var n=e[t],o=l[n.id];if(o){o.refs++;for(var i=0;i<o.parts.length;i++)o.parts[i](n.parts[i]);for(;i<n.parts.length;i++)o.parts.push(b(n.parts[i]));o.parts.length>n.parts.length&&(o.parts.length=n.parts.length)}else{for(var a=[],i=0;i<n.parts.length;i++)a.push(b(n.parts[i]));l[n.id]={id:n.id,refs:1,parts:a}}}}function m(){var e=document.createElement("style");return e.type="text/css",a.appendChild(e),e}function b(e){var t,n,o=document.querySelector("style["+p+'~="'+e.id+'"]');if(o){if(c)return d;o.parentNode.removeChild(o)}if(h){var i=s++;t=v.bind(null,o=r||(r=m()),i,!1),n=v.bind(null,o,i,!0)}else t=f.bind(null,o=m()),n=function(){o.parentNode.removeChild(o)};return t(e),function(o){o?(o.css!==e.css||o.media!==e.media||o.sourceMap!==e.sourceMap)&&t(e=o):n()}}var _=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function v(e,t,n,o){var i=n?"":o.css;if(e.styleSheet)e.styleSheet.cssText=_(t,i);else{var l=document.createTextNode(i),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(l,a[t]):e.appendChild(l)}}function f(e,t){var n=t.css,o=t.media,i=t.sourceMap;if(o&&e.setAttribute("media",o),g.ssrId&&e.setAttribute(p,t.id),i&&(n+="\n/*# sourceURL="+i.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var l=t[o]={id:o,exports:{}};return e[o](l,l.exports,n),l.exports}n.d=function(e,t){for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="bundles/lengowconnector/",window?.__sw__?.assetPath&&(n.p=window.__sw__.assetPath+"/bundles/lengowconnector/"),function(){"use strict";n(7266);let e="https://my.lengow.net",t="https://my.lengow",o={accepted:"accepted",waiting_shipment:"waiting_shipment",shipped:"shipped",refunded:"refunded",closed:"closed",canceled:"canceled",partial_refunded:"partial_refunded"},i={prime:"is_prime",express:"is_express",business:"is_business",delivered_by_marketplace:"is_delivered_by_marketplace"},l={manual:"manual",cron:"cron"},a={import:1,send:2},r={reimport:"reimport",resend:"resend"},s={new:0},c={ship:"ship"},d={finish:2},g={canceled:"canceled"},{Component:p}=Shopware;p.register("lgw-action-button",{template:'{% block lgw_action_button %}\n    <template>\n        <div class="lgw-action-button">\n            <sw-button v-show="!isLoading"\n                       @click="clickButton(buttonAction)"\n                       size="x-small"\n                       class="lgw-action-tooltip">\n                {{ buttonContent }}\n                <span>\n                    {{ tooltipTitle }}\n                    <ul>\n                        <li v-for="error in errors">\n                            {{ error }}\n                        </li>\n                    </ul>\n                </span>\n            </sw-button>\n            <sw-loader v-show="isLoading" size="14px"></sw-loader>\n        </div>\n    </template>\n{% endblock %}',inject:["LengowConnectorOrderService"],props:{lengowOrderId:{type:String,required:!0},orderProcessState:{type:Number,required:!0},onRefresh:{type:Object,required:!0}},data(){return{errors:[],buttonContent:"",buttonAction:"",tooltipTitle:"",isLoading:!1}},created(){this.createdComponent()},computed:{},methods:{createdComponent(){this.isLoading=!0,0===this.orderProcessState?(this.buttonAction=r.reimport,this.buttonContent=this.$tc("lengow-connector.order.action_button.not_imported"),this.tooltipTitle=this.$tc("lengow-connector.order.action_button.import")):(this.buttonAction=r.resend,this.buttonContent=this.$tc("lengow-connector.order.action_button.not_sent"),this.tooltipTitle=this.$tc("lengow-connector.order.action_button.action")),this.getLengowOrderErrors().then(e=>{this.errors=e}).finally(()=>{this.isLoading=!1})},getLengowOrderErrors(){return this.LengowConnectorOrderService.getOrderErrorMessages({lengowOrderId:this.lengowOrderId,orderErrorType:0===this.orderProcessState?a.import:a.send})},clickButton(e){e===r.reimport?this.reImportOrder():this.reSendAction()},reImportOrder(){this.isLoading=!0,this.LengowConnectorOrderService.reImportOrder({lengowOrderId:this.lengowOrderId}).then(e=>{e.success?this.onRefresh():this.getLengowOrderErrors().then(e=>{this.errors=e,this.isLoading=!1})})},reSendAction(){this.isLoading=!0,this.LengowConnectorOrderService.reSendAction({lengowOrderId:this.lengowOrderId}).then(e=>{e.success?this.onRefresh():this.getLengowOrderErrors().then(e=>{this.errors=e,this.isLoading=!1})})}}}),n(4576);let{Component:h,Data:{Criteria:w}}=Shopware;h.register("lgw-action-label",{template:'{% block lgw_action_label %}\n    <template>\n        <div class="lgw-action-label">\n            <span v-show="hasActiveAction && !isLoading" :title="labelTitle">\n                {{ labelContent }}\n            </span>\n            <sw-loader v-show="isLoading" size="14px"></sw-loader>\n        </div>\n    </template>\n{% endblock %}',inject:["repositoryFactory"],props:{orderId:{type:String,required:!0}},data(){return{isLoading:!1,hasActiveAction:!1,labelContent:"",labelTitle:""}},computed:{lengowActionRepository(){return this.repositoryFactory.create("lengow_action")}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let e=new w;e.addFilter(w.multi("AND",[w.equals("order.id",this.orderId),w.equals("state",s.new)])),this.lengowActionRepository.search(e,Shopware.Context.api).then(e=>{if(e.total>0){this.hasActiveAction=!0;let t=e.first();this.labelContent=t.actionType===c.ship?this.$tc("lengow-connector.order.action_label.action_ship_sent"):this.$tc("lengow-connector.order.action_label.action_cancel_sent"),this.labelTitle=this.$tc("lengow-connector.order.action_label.action_waiting_return")}}).finally(()=>{this.isLoading=!1})}}}),n(3160);let{Component:u}=Shopware,{mapState:m}=Shopware.Component.getComponentHelper();u.register("lgw-catalog-select",{template:'{% block lgw_catalog_select %}\n    <template>\n        <div class="lgw-catalog-select">\n            <h4>{{ salesChannel.name }}</h4>\n            <sw-multi-select\n                    :options="options"\n                    :value="filter"\n                    :disabled="disabled"\n                    :placeholder="$tc(\'lengow-connector.connection.catalog.link_placeholder_catalog\')"\n                    @update:value="onChange"\n                    @change="onChange"\n            >\n            </sw-multi-select>\n        </div>\n    </template>\n{% endblock %}\n',props:{salesChannel:{type:Object,required:!0},onSelectChange:{type:Object,required:!0},onOptionsLoaded:{type:Object,required:!0},disabled:{type:Boolean,required:!1,default:!0}},data(){return{options:[],filter:[]}},created(){this.createdComponent()},computed:{...m("lgwConnection",["catalogList","catalogSelected","catalogSelectionChanged"])},watch:{catalogSelectionChanged(){this.catalogSelectionChanged&&this.createdComponent()}},methods:{createdComponent(){this.isLoading=!0;let e=[];Object.keys(this.catalogSelected).forEach(t=>{t!==this.salesChannel.id&&this.catalogSelected[t].forEach(t=>{e.push(t)})}),this.options=this.catalogList.filter(t=>!e.includes(t.value)),Shopware.State.commit("lgwConnection/setOptionIsLoading",[this.salesChannel.id,!1]),this.onOptionsLoaded(),this.isLoading=!1},onChange(e){this.filter=e,this.onSelectChange(this.salesChannel.id,e)}}});let{Component:b}=Shopware;b.register("lgw-conditional-string-field",{template:'{% block lgw_conditional_string_field %}\n    <template>\n        <div>\n            <sw-help-text class="lgw-help-text"\n                          v-if="switchHelpText"\n                          :text="switchHelpText"\n                          :width="200"\n                          tooltipPosition="right">\n            </sw-help-text>\n            <sw-switch-field class="text-center"\n                             :label="switchLabel"\n                             v-model="locked"\n                            @update:value="onSaveSettings($event, switchSettingsKey, settingsSalesChannelId)"\n                            @change="onSaveSettings($event, switchSettingsKey, settingsSalesChannelId)"\n            >\n            </sw-switch-field>\n            <lgw-lockable-string-field :fieldContent="fieldContent"\n                                       :locked="isLocked"\n                                       :fieldPlaceholder="fieldPlaceholder"\n                                       :fieldLabel="fieldLabel"\n                                       :onSaveSettings="onSaveSettings"\n                                       :settingsKey="fieldSettingsKey"\n                                       :helpText="helpText"\n                                       :settingsSalesChannelId="settingsSalesChannelId">\n            </lgw-lockable-string-field>\n        </div>\n    </template>\n{% endblock %}\n',props:{fieldContent:{type:String,required:!1,default:""},locked:{type:Boolean,required:!1,default:!0},switchLabel:{type:String,required:!0},fieldPlaceholder:{type:String,required:!1,default:""},fieldLabel:{type:String,required:!1,default:""},onSaveSettings:{type:Object,required:!0},switchSettingsKey:{type:String,required:!1,default:""},fieldSettingsKey:{type:String,required:!1,default:""},settingsSalesChannelId:{type:String,required:!1,default:""},helpText:{type:String,required:!1,default:""},switchHelpText:{type:String,required:!1,default:""}},computed:{isLocked(){return!this.locked}}}),n(8271);let{Component:_,Data:{Criteria:v},Filter:f}=Shopware;_.register("lgw-country-icon",{template:'{% block lgw_country_icon %}\n    <template>\n        <div v-if="countryIso !== \'\'" class="lgw-country-icon">\n            <img v-show="!isLoading"\n                 @load="loaded"\n                 :src="assetFilter(\'lengowconnector/flag/\'+countryIso+\'.png\')"\n                 :alt="countryName"\n                 :title="countryName">\n            <sw-loader v-show="isLoading" size="14px"></sw-loader>\n        </div>\n    </template>\n{% endblock %}\n',inject:["repositoryFactory","acl"],props:{codeIsoA2:{type:String,required:!0,default:""}},data(){return{isLoading:!0,countryName:"",countryIso:""}},computed:{assetFilter(){return f.getByName("asset")},countryRepository(){return this.repositoryFactory.create("country")}},created(){this.assetFilter(),this.createdComponent()},methods:{createdComponent(){let e=new v;e.addFilter(v.equals("iso",this.codeIsoA2)),this.countryRepository.search(e,Shopware.Context.api).then(e=>{if(e.total>0){let t=e.first();this.countryName=t.name,this.countryIso=t.iso}else this.countryName="Others",this.countryIso="OTHERS"}).catch(()=>{this.countryName="Others",this.countryIso="OTHERS"})},loaded(){this.isLoading=!1}}}),n(6366);let{Component:k,Data:{Criteria:S}}=Shopware;k.register("lgw-debug-warning",{template:'{% block lengow_debug_warning %}\n    <template>\n        <span v-if="debugMode" class="lgw-debug-warning" >Debug mode</span>\n    </template>\n{% endblock %}\n',inject:["repositoryFactory"],data(){return{debugMode:!1}},computed:{lengowSettingsRepository(){return this.repositoryFactory.create("lengow_settings")}},created(){let e=new S;e.addFilter(S.equals("name","lengowDebugEnabled")),this.lengowSettingsRepository.search(e,Shopware.Context.api).then(e=>{e.total>0&&(this.debugMode="1"===e.first().value)})}}),n(6018);let{Component:C}=Shopware;C.register("lgw-description-list-element",{template:'{% block lgw_description_list_element %}\n    <template>\n        <div v-if="!isLoading" class="lgw-description-list-element">\n            <dt>{{ title }}</dt>\n            <dd>\n                <sw-icon v-if="showIcon" :name="iconName" small :class="iconClass"></sw-icon>\n                <div v-else-if="isDate">\n                    {{ formatDate(content) }}\n                </div>\n                <div v-else-if="isArray">\n                    <sw-button v-for="value in content"\n                            :key="value"\n                            size="x-small">\n                        {{ value }}\n                    </sw-button>\n                </div>\n                <span v-else>\n                    {{ content }}\n                </span>\n            </dd>\n        </div>\n    </template>\n{% endblock %}\n',inject:[],mixins:[],props:{title:{type:String,required:!0},value:{type:String,required:!0},type:{type:String,required:!1,default:""},helpText:{type:String,required:!1,default:""}},data(){return{showIcon:!1,iconName:"",iconClass:"",content:"",isDate:!1,isArray:!1,isLoading:!1}},created(){this.createdComponent()},metaInfo(){return{title:this.$createTitle()}},computed:{},methods:{formatDate(e){return!(e instanceof Date)||isNaN(e.getTime())?"":new Intl.DateTimeFormat(navigator.language.substring(0,2),{hour:"2-digit",minute:"2-digit"}).format(e)},createdComponent(){this.isLoading=!0;let e=this.$tc("lengow-connector.toolbox.none");switch(this.type){case"bool":this.value?(this.showIcon=!0,this.iconName="solid-checkmark-s",this.iconClass="is--active lgw-check-green"):""!==this.helpText?this.content=this.helpText:(this.showIcon=!0,this.iconName="regular-times-xs",this.iconClass="is--inactive lgw-check-red");break;case"date":0!==this.value?(this.isDate=!0,this.content=new Date(1e3*this.value)):this.content=e;break;case"array":this.value.length>0?(this.isArray=!0,this.content=this.value):this.content=e;break;default:this.content=this.value}this.isLoading=!1}}}),n(0);let{Component:y,Data:{Criteria:x}}=Shopware;y.register("lgw-footer",{template:"{% block lgw_footer %}\n    <template>\n        <div class=\"lgw-footer\">\n            <div>\n                <p>\n                    <routerLink class=\"lgw-router-link\" :to=\"{ name: 'lengow.connector.setting' }\" tag='span'>\n                        {{ $tc('lengow-connector.page.settings') }}\n                    </routerLink>\n                    |\n                    <routerLink class=\"lgw-router-link\" :to=\"{ name: 'lengow.connector.toolbox' }\" tag='span'>\n                        {{ $tc('lengow-connector.page.toolbox') }}\n                    </routerLink>\n                    | <routerLink class=\"lgw-router-link\" :to=\"{ name: 'lengow.connector.legal' }\" tag='span'>\n                        {{ $tc('lengow-connector.legals.title') }}\n                    </routerLink>\n                    |  {{ $tc('lengow-connector.footer.lengow_plugin_name') }}\n                    <span v-if=\"preprod\" class=\"lgw-label-preprod\">Preprod</span> v {{ moduleVersion }}\n                    | copyright \xa9 {{ currentYear }}\n                    <a :href=\"$tc('lengow-connector.footer.link')\" target=\"_blank\">  Lengow </a>\n                </p>\n            </div>\n        </div>\n    </template>\n{% endblock %}\n",inject:["repositoryFactory"],data(){return{lengowEnvironmentUrl:e,moduleVersion:"1.2.2",currentYear:new Date().getFullYear(),preprod:!1}},computed:{lengowConfigRepository(){return this.repositoryFactory.create("lengow_settings")}},created(){this.loadEnvironmentUrl()},methods:{loadEnvironmentUrl(){let e=new x;e.addFilter(x.equals("name","lengowEnvironmentUrl")),this.lengowConfigRepository.search(e,Shopware.Context.api).then(e=>{e.total>0&&(this.lengowEnvironmentUrl=t+e[0].value,this.checkPreprod())})},checkPreprod(){this.preprod="https://my.lengow.net"===this.lengowEnvironmentUrl}}}),n(5269);let{Component:L,Data:{Criteria:$}}=Shopware;L.register("lgw-free-trial-warning",{template:"{% block lgw_free_trial_warning %}\n    <template>\n        <span class=\"lgw-free-trial-warning\" >\n            {{ $tc('lengow-connector.global.trial_1') }}\n            {{ dayLeft }}\n            {{ $tc('lengow-connector.global.trial_2') }}\n            <a :href=\"link\" target=\"_blank\">\n                {{ $tc('lengow-connector.global.upgrade_account') }}\n            </a>\n        </span>\n    </template>\n{% endblock %}\n",inject:["repositoryFactory"],props:{accountStatusData:{type:Object,required:!0}},data(){return{dayLeft:"",link:e}},computed:{lengowConfigRepository(){return this.repositoryFactory.create("lengow_settings")}},created(){this.createdComponent(),this.loadEnvironmentUrl()},methods:{createdComponent(){this.dayLeft=this.accountStatusData.day},loadEnvironmentUrl(){let e=new $;e.addFilter($.equals("name","lengowEnvironmentUrl")),this.lengowConfigRepository.search(e,Shopware.Context.api).then(e=>{e.total>0&&(this.link=t+e[0].value)})}}});let{Component:M,Data:{Criteria:T}}=Shopware;M.register("lgw-lockable-string-field",{template:'{% block lgw_lockable_string_field %}\n    <template>\n        <div>\n            <sw-help-text class="lgw-help-text"\n                          v-if="helpText"\n                          :text="helpText"\n                          :width="200"\n                          tooltipPosition="right">\n            </sw-help-text>\n            <sw-text-field\n                :copyable="false"\n                :copyableTooltip="false"\n                :disabled="locked"\n                @update:value="handleChange($event)"\n                @change="handleChange($event)"\n                :placeholder="fieldPlaceholder"\n                :label="fieldLabel"\n                :value="fieldContent">\n            </sw-text-field>\n        </div>\n    </template>\n{% endblock %}\n',props:{fieldContent:{type:String,required:!1,default:""},locked:{type:Boolean,required:!1,default:!0},fieldPlaceholder:{type:String,required:!1,default:""},fieldLabel:{type:String,required:!1,default:""},onSaveSettings:{type:Object,required:!0},settingsKey:{type:String,required:!1,default:""},helpText:{type:String,required:!1,default:""},settingsSalesChannelId:{type:String,required:!1,default:""}},data(){return{newFieldContent:this.fieldContent}},methods:{handleChange(e){this.newFieldContent=e,this.onSaveSettings(e,this.settingsKey,this.settingsSalesChannelId)}}}),n(8927);let{Component:I}=Shopware;I.register("lgw-order-state-label",{template:'{% block lgw_order_state_label %}\n    <template>\n        <span class="lgw-order-state-label" :class="orderStateClass">\n            {{ orderStateTranslation }}\n        </span>\n    </template>\n{% endblock %}',props:{orderLengowState:{type:String,required:!0,default:""}},data(){return{orderStateClass:"",orderStateTranslation:"",isLoading:!1}},created(){this.createdComponent()},methods:{createdComponent(){let e,t;switch(this.isLoading=!0,this.orderLengowState){case o.accepted:e="lengow-connector.order.state.accepted",t="mod-accepted";break;case o.waiting_shipment:e="lengow-connector.order.state.waiting_shipment",t="mod-waiting-shipment";break;case o.shipped:e="lengow-connector.order.state.shipped",t="mod-shipped";break;case o.refunded:e="lengow-connector.order.state.refunded",t="mod-refunded";break;case o.closed:e="lengow-connector.order.state.closed",t="mod-closed";break;case o.canceled:e="lengow-connector.order.state.canceled",t="mod-canceled";break;case o.partial_refunded:e="lengow-connector.order.state.partial_refunded",t="mod-canceled";break;default:e=this.orderLengowState,t="mod-default"}this.orderStateClass=t,this.orderStateTranslation=this.$tc(e),this.isLoading=!1}}}),n(3675);let{Component:A}=Shopware;A.register("lgw-order-type-icon",{template:'{% block lgw_order_type_icon %}\n    <template>\n        <div class="lgw-order-type-icon" :class="iconColorClass">\n            <span class="lgw-order-type-img" :class="iconModClass" :title="iconLabel"></span>\n        </div>\n    </template>\n{% endblock %}',props:{type:{type:String,required:!0},label:{type:String,required:!0}},data(){return{iconColorClass:"",iconModClass:"",iconLabel:"",isLoading:!1}},created(){this.createdComponent()},methods:{createdComponent(){let e,t;this.isLoading=!0,(this.type===i.express||this.type===i.prime)&&(e="mod-orange",t="mod-chrono"),this.type===i.delivered_by_marketplace&&(e="mod-green",t="mod-delivery"),this.type===i.business&&(e="mod-blue",t="mod-pro"),this.iconColorClass=e,this.iconModClass=t,this.iconLabel=this.label,this.isLoading=!1}}}),n(9735);let{Component:R,Filter:D,Data:{Criteria:F}}=Shopware;R.register("lgw-update-modal",{template:'{% block lgw_update_modal %}\n    <template>\n        <sw-modal variant="large" :showHeader="false" @modal-close="closeModal">\n            <div class="lgw-update-modal">\n                <button class="sw-modal__close lgw-close"\n                        :title="$tc(\'global.sw-modal.labelClose\')"\n                        :aria-label="$tc(\'global.sw-modal.labelClose\')"\n                        @click.prevent="closeModal">\n                    <sw-icon name="regular-times-xs" small></sw-icon>\n                </button>\n                <div class="lgw-row flexbox-vertical-center">\n                    <div class="lgw-col-5 text-center">\n                        <img :src="assetFilter(\'lengowconnector/plugin-update.png\')">\n                    </div>\n                    <div class="lgw-col-7">\n                        <h1>{{ $tc(\'lengow-connector.update.version_available\') }}</h1>\n                        <p>\n                            {{ $tc(\'lengow-connector.update.start_now\') }}\n                            <a :href="changelogLink" target="_blank">\n                                {{ $tc(\'lengow-connector.update.link_changelog\') }}\n                            </a>\n                        </p>\n                        <div class="lgw-content-section mod-small">\n                            <h2 class="no-margin-bottom">{{ $tc(\'lengow-connector.update.step_one\') }}</h2>\n                            <p class="no-margin-bottom">\n                                {{ $tc(\'lengow-connector.update.download_last_version\') }}\n                            </p>\n                            <p class="text-lesser text-italic">\n                                {{ $tc(\'lengow-connector.update.plugin_compatibility\') }}\n                                {{ cmsMinVersion }}\n                                {{ $tc(\'lengow-connector.update.plugin_compatibility_to\') }}\n                                {{ cmsMaxVersion }}\n                                <template v-for="extension in extensions">\n                                    <br />\n                                    {{ $tc(\'lengow-connector.update.extension_required\') }}\n                                    {{ extension.name }}\n                                    {{ extension.min_version }}\n                                    {{ $tc(\'lengow-connector.update.extension_required_to\') }}\n                                    {{ extension.max_version }}\n                                </template>\n                            </p>\n                        </div>\n                        <div class="lgw-content-section mod-small">\n                            <h2 class="no-margin-bottom">{{ $tc(\'lengow-connector.update.step_two\') }}</h2>\n                            <p class="no-margin-bottom">\n                                <a :href="updateGuideLink" target="_blank">\n                                    {{ $tc(\'lengow-connector.update.link_follow\') }}\n                                </a>\n                                {{ $tc(\'lengow-connector.update.update_procedure\') }}\n                            </p>\n                            <p class="text-lesser text-italic">\n                                {{ $tc(\'lengow-connector.update.not_working\') }}\n                                <a :href="supportLink" target="_blank">\n                                    {{ $tc(\'lengow-connector.update.customer_success_team\') }}\n                                </a>\n                            </p>\n                        </div>\n                        <div class="flexbox-vertical-center margin-standard">\n                            <a class="lgw-btn no-margin-top" :href="downloadLink" target="_blank">\n                                {{ $tc(\'lengow-connector.update.button_download_version\') }} {{ version }}\n                            </a>\n                            <button v-if="showRemindMeLater"\n                                    @click.prevent="remindMeLater"\n                                    class="lgw-btn-link no-margin-top text-small">\n                                {{ $tc(\'lengow-connector.update.button_remind_me_later\') }}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </sw-modal>\n    </template>\n{% endblock %}\n',inject:["LengowConnectorSyncService","repositoryFactory"],props:{pluginData:{type:Object,required:!0},onClickClose:{type:Object,required:!0}},data(){return{version:"",cmsMinVersion:"",cmsMaxVersion:"",extensions:[],changelogLink:"",updateGuideLink:"",supportLink:"",downloadLink:"",showRemindMeLater:!1,lengowEnvironmentUrl:e}},computed:{assetFilter(){return D.getByName("asset")},lengowConfigRepository(){return this.repositoryFactory.create("lengow_settings")}},created(){this.assetFilter(),this.loadEnvironmentUrl()},methods:{createdComponent(){this.version=this.pluginData.version,this.downloadLink=this.lengowEnvironmentUrl+this.pluginData.download_link,this.cmsMinVersion=this.pluginData.cms_min_version,this.cmsMaxVersion=this.pluginData.cms_max_version,this.extensions=this.pluginData.extensions,this.changelogLink=this.pluginData.links.changelog,this.updateGuideLink=this.pluginData.links.update_guide,this.supportLink=this.pluginData.links.support,this.showRemindMeLater=this.pluginData.show_update_modal},loadEnvironmentUrl(){let e=new F;e.addFilter(F.equals("name","lengowEnvironmentUrl")),this.lengowConfigRepository.search(e,Shopware.Context.api).then(e=>{e.total>0&&(this.lengowEnvironmentUrl=t+e[0].value,this.createdComponent())})},remindMeLater(){this.LengowConnectorSyncService.remindMeLater().then(e=>{e.success&&this.closeModal()})},closeModal(){this.showRemindMeLater=!1,this.onClickClose()}}}),n(679);let{Component:E}=Shopware;E.register("lgw-update-warning",{template:"{% block lgw_update_warning %}\n    <template>\n        <span class=\"lgw-update-warning\" >\n            {{ $tc('lengow-connector.global.new_version_available_1') }}\n            {{ version }}\n            {{ $tc('lengow-connector.global.new_version_available_2') }}\n            <button @click.prevent=\"onClick\" class=\"lgw-btn-link\">\n                {{ $tc('lengow-connector.global.download_plugin') }}\n            </button>\n        </span>\n    </template>\n{% endblock %}\n",props:{pluginData:{type:Object,required:!0},onClickDownload:{type:Object,required:!0}},data(){return{version:""}},created(){this.createdComponent()},methods:{createdComponent(){this.version=this.pluginData.version},onClick(){this.onClickDownload()}}});let{Component:O}=Shopware;O.override("sw-order-detail",{template:'{% block sw_order_detail_content_tabs_general %}\n    {% parent %}\n\n    {% block lengow_connector_order_data %}\n        <sw-tabs-item :route="{ name: \'lgw.order.detail\', params: { id: $route.params.id } }" title="Lengow">\n            Lengow\n        </sw-tabs-item>\n    {% endblock %}\n{% endblock %}\n'}),n(5885);let{Component:P}=Shopware,{Criteria:B}=Shopware.Data;P.override("sw-order-detail-details",{template:'{% block sw_order_detail_details_shipping_tracking_codes %}\n    {% parent %}\n\n         {% block lengow_connector_return_tracking_number %}\n            <sw-multi-tag-select\n                    v-if="returnTrackingNumberSet"\n                    v-model:value="localReturnTrackingNumber"\n                    v-model="localReturnTrackingNumber"\n                    class="sw-order-user-card__tracking-code-select"\n                    :disabled="!acl.can(\'order.editor\')"\n                    :placeholder="$t(\'lengow-connector.order.action_data.return_tracking_number\')"\n                    :label="$t(\'lengow-connector.order.action_data.return_tracking_number\')"\n                    @update:value="updateReturnTrackingNumber"\n                    @change="updateReturnTrackingNumber"\n            >\n            </sw-multi-tag-select>\n         {% endblock %}\n\n         {% block lengow_connector_return_carrier %}\n                <sw-entity-single-select\n                        v-if="returnCarrierSet"\n                        v-model="localReturnCarrier"\n                        entity="shipping_method"\n                        @update:value="updateReturnCarrier"\n                        @change="updateReturnCarrier"\n                        :label="$t(\'lengow-connector.order.action_data.return_carrier\')"\n                        :placeholder="$t(\'lengow-connector.order.action_data.return_carrier\')"\n                        show-clearable-button\n                >\n                </sw-entity-single-select>\n         {% endblock %}\n\n{% endblock %}\n',props:{orderId:{type:String,required:!0}},inject:["LengowConnectorSyncService","repositoryFactory"],data(){return{returnTrackingNumberSet:!1,returnCarrierSet:!1,localReturnTrackingNumber:[],localReturnCarrier:""}},computed:{shippingRepository(){return this.repositoryFactory.create("shipping_method")}},created(){this.checkMarketplaceArguments(),this.loadReturnTrackingNumbers(),this.loadReturnCarrier(),this.localReturnTrackingNumber=this.returnTrackingNumber,this.localReturnCarrier=this.returnCarrier},methods:{checkMarketplaceArguments(){this.LengowConnectorSyncService.verifyArgRtnRc(this.orderId).then(e=>{let t=e.return_tracking_number_exists,n=e.return_carrier_exists;this.returnTrackingNumberSet=!!t,this.returnCarrierSet=!!n}).catch(e=>{console.error("Error fetching marketplace arguments:",e)})},onSaveRtn(){let e=this.localReturnTrackingNumber;this.LengowConnectorSyncService.OnChangeRtn(this.orderId,e).then(()=>{this.$emit("return-tracking-number-saved",e)}).catch(e=>{console.error("Request failed:",e)})},updateReturnTrackingNumber(e){this.localReturnTrackingNumber=e,this.onSaveRtn()},loadReturnTrackingNumbers(){this.LengowConnectorSyncService.OnLoadRtn(this.orderId).then(e=>{if(e.return_tracking_number&&Array.isArray(e.return_tracking_number)){let t=JSON.parse(e.return_tracking_number);this.localReturnTrackingNumber=t.map(e=>e.replace(/"/g,""))}else this.localReturnTrackingNumber=[]}).catch(e=>{console.error("Error fetching return tracking numbers:",e),this.localReturnTrackingNumber=[]})},async onSaveRc(){let e=this.localReturnCarrier;try{let t=await this.getShippingMethodName(e);this.LengowConnectorSyncService.OnChangeRc(this.orderId,t).then(()=>{this.$emit("return-carrier-saved",t)}).catch(e=>{console.error("Request failed:",e)})}catch(e){console.error("Error fetching shipping method name:",e)}},updateReturnCarrier(e){this.localReturnCarrier=e,this.onSaveRc()},loadReturnCarrier(e){this.localReturnCarrier=e,this.LengowConnectorSyncService.OnLoadRc(this.orderId).then(e=>{e.return_carrier?this.getShippingMethodIdByName(e.return_carrier).then(e=>{this.localReturnCarrier=e}).catch(e=>{console.error("Error fetching shipping method id:",e)}):this.localReturnCarrier=""}).catch(e=>{console.error("Error fetching return carrier:",e),this.localReturnCarrier=[]})},getShippingMethodName(e){let t=new B(1,1);return t.addFilter({field:"id",type:"equals",value:e}),this.shippingRepository.search(t,Shopware.Context.api).then(e=>{if(e[0].name)return e[0].name;throw Error("Shipping method not found")})},getShippingMethodIdByName(e){e=e.replace(/^"(.*)"$/,"$1");let t=new B(1,1);return t.addFilter({field:"name",type:"equals",value:e}),this.shippingRepository.search(t,Shopware.Context.api).then(e=>{if(e.total>0)return e.first().id;throw Error("Shipping method not found")})}}}),n(35);var N={namespaced:!0,state(){return{catalogList:[],catalogSelected:{},loading:{},optionIsLoading:!1,catalogSelectionChanged:!1}},getters:{catalogList(e){return e.catalogList},catalogSelected(e){return e.catalogSelected},optionIsLoading(e){return e.optionIsLoading},catalogSelectionChanged(e){return e.catalogSelectionChanged}},mutations:{setCatalogList(e,t){e.catalogList=t},setCatalogSelected(e,t){e.catalogSelected=t},setOptionIsLoading(e,t){let n=t[0],o=t[1];return"boolean"==typeof o&&(e.loading[n]=o,e.optionIsLoading=Object.values(e.loading).some(e=>e),!0)},setCatalogSelectionChanged(e,t){e.catalogSelectionChanged=t}}};let{Component:G,Data:{Criteria:q}}=Shopware;G.register("lgw-connection",{template:'{% block lgw_connection %}\n    <sw-page class="lgw-connection" :showSearchBar="false">\n        {% block lgw_connection_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block lgw_connection_smart_bar_header_title %}\n                    <h2>\n                        {% block lgw_connection_smart_bar_header_title_text %}\n                            <template v-if="!isLoading">\n                                {{ $tc(\'lengow-connector.page.connection\') }}\n                            </template>\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n        {% block lgw_connection_content %}\n            <template #content>\n                <sw-card-view v-if="isNew && !isLoading">\n                    {% block lgw_connection_content_view %}\n                        <router-view></router-view>\n                    {% endblock %}\n                    {% block lgw_toolbox_content_footer %}\n                        <lgw-footer v-if="!isLoading"></lgw-footer>\n                    {% endblock %}\n                </sw-card-view>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],data(){return{isNew:!1,isLoading:!0}},computed:{lengowSettingsRepository(){return this.repositoryFactory.create("lengow_settings")}},beforeCreate(){Shopware.State.registerModule("lgwConnection",N)},created(){this.createdComponent()},beforeDestroy(){Shopware.State.unregisterModule("lgwConnection")},methods:{createdComponent(){let e=new q;e.addFilter(q.equalsAny("name",["lengowAccountId","lengowAccessToken","lengowSecretToken"])),this.lengowSettingsRepository.search(e,Shopware.Context.api).then(e=>{let t=[];e.total>0&&e.forEach(e=>{t[e.name]=e.value}),t.lengowAccountId&&t.lengowAccessToken&&t.lengowSecretToken||(this.isNew=!0)}).finally(()=>{this.isLoading=!1,!1===this.isNew&&this.redirectToDashboard()})},redirectToDashboard(){this.$router.push({name:"lengow.connector.dashboard"})}}}),n(8204);let{Component:j}=Shopware;j.register("lgw-contact",{template:"{% block lgw_contact %}\n    <sw-page class=\"lgw-contact\" :showSearchBar=\"false\">\n        {% block lgw_contact_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block lgw_contact_smart_bar_header_title %}\n                    <h2>\n                        {% block lgw_contact_smart_bar_header_title_text %}\n                            {{ $tc('lengow-connector.page.help') }}\n                            <lgw-debug-warning></lgw-debug-warning>\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n        {% block lgw_contact_content %}\n            <sw-card-view slot=\"content\">\n                <sw-card>\n                    <h2>{{ $tc('lengow-connector.contact.title') }}</h2>\n                    <p>\n                        <br/>\n                        {{ $tc('lengow-connector.contact.contain_text_support') }}\n                        <a :href=\"supportLink\" target=\"_blank\">\n                            {{ $tc('lengow-connector.contact.title_lengow_support') }}\n                        </a>\n                        <br/><br/>\n                        {{ $tc('lengow-connector.contact.contain_text_support_hour') }}\n                        <br/><br/>\n                        {{ $tc('lengow-connector.contact.find_answer') }}\n                        <a :href=\"helpCenterLink\" target=\"_blank\">\n                            {{ $tc('lengow-connector.contact.link_magento_guide') }}\n                        </a>\n                    </p>\n                </sw-card>\n                <lgw-footer></lgw-footer>\n            </sw-card-view>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n",inject:["LengowConnectorSyncService"],data(){return{helpCenterLink:"",supportLink:""}},created(){this.createdComponent()},methods:{createdComponent(){this.LengowConnectorSyncService.getPluginLinks().then(e=>{e.success&&(this.helpCenterLink=e.links.help_center,this.supportLink=e.links.support)})}}});let{Component:U}=Shopware;U.register("lgw-dashboard",{template:'{% block lgw_dashboard %}\n    <sw-page :showSearchBar="false">\n        {% block lgw_dashboard_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block lgw_dashboard_smart_bar_header_title %}\n                    <h2>\n                        {% block lgw_dashboard_smart_bar_header_title_text %}\n                            {{ $tc(\'lengow-connector.page.dashboard\') }}\n                            <template v-if="!trialExpired && !isLoading">\n                                <lgw-debug-warning></lgw-debug-warning>\n                                <lgw-update-warning v-if="newVersionIsAvailable"\n                                                    :pluginData="pluginData"\n                                                    :onClickDownload="openUpdateModal">\n                                </lgw-update-warning>\n                                <lgw-free-trial-warning v-if="freeTrialEnabled"\n                                                        :accountStatusData="accountStatusData">\n                                </lgw-free-trial-warning>\n                            </template>\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n        {% block lgw_dashboard_content %}\n            <template #content>\n                <template v-if="!trialExpired && !isLoading">\n                    <lgw-dashboard-home></lgw-dashboard-home>\n                    <lgw-update-modal v-if="showUpdateModal"\n                                      :pluginData="pluginData"\n                                      :onClickClose="closeUpdateModal">\n                    </lgw-update-modal>\n                </template>\n                <template v-else-if="trialExpired && !isLoading">\n                    <lgw-dashboard-free-trial></lgw-dashboard-free-trial>\n                </template>\n                <template v-else>\n                    <sw-loader size="50px"></sw-loader>\n                </template>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',inject:["LengowConnectorSyncService"],data(){return{isLoading:!0,freeTrialEnabled:!1,trialExpired:!1,newVersionIsAvailable:!1,showUpdateModal:!1,accountStatusData:[],pluginData:[]}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0,this.LengowConnectorSyncService.getAccountStatus(!1).then(e=>{e.success&&(this.accountStatusData=e,this.freeTrialEnabled="free_trial"===this.accountStatusData.type,this.freeTrialEnabled&&this.accountStatusData.expired?(this.trialExpired=!0,this.isLoading=!1):this.LengowConnectorSyncService.getPluginData().then(e=>{e.success&&(this.pluginData=e.plugin_data,this.newVersionIsAvailable=this.pluginData.new_version_is_available,this.showUpdateModal=this.pluginData.show_update_modal)}).finally(()=>{this.isLoading=!1}))})},openUpdateModal(){this.showUpdateModal=!0},closeUpdateModal(){this.showUpdateModal=!1}}}),n(3989);let{Component:z}=Shopware;z.register("lgw-legal-notices",{template:"{% block lgw_legal_notices %}\n    <sw-page class=\"lgw-legal-notices\" :showSearchBar=\"false\">\n        {% block lgw_legal_notices_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block lgw_legal_notices_smart_bar_header_title %}\n                    <h2>\n                        {% block lgw_legal_notices_smart_bar_header_title_text %}\n                            {{ $tc('lengow-connector.page.legal_notices') }}\n                            <lgw-debug-warning></lgw-debug-warning>\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n        {% block lgw_legal_notices_content %}\n            <template #content>\n            <sw-card-view>\n                <sw-card>\n                    {% block lgw_legal_notices_content_company_infos %}\n                        <div><br/>\n                            <h3>SAS Lengow</h3>\n                            <span>{{ $tc('lengow-connector.legals.simplified_company') }}</span>\n                            <br/>\n                            <span>{{ $tc('lengow-connector.legals.social_capital') }} 368 778 €</span>\n                            <br/>\n                            <span>{{ $tc('lengow-connector.legals.cnil_declaration') }} 1748784 v 0</span>\n                            <br/>\n                            <span>{{ $tc('lengow-connector.legals.company_registration_number') }} 513 381 434</span>\n                            <br/>\n                            <span>{{ $tc('lengow-connector.legals.vat_identification_number') }} FR42513381434</span>\n                        </div>\n                    {% endblock %}\n                    {% block lgw_legal_notices_content_company_contact %}\n                        <div>\n                            <br/><br/>\n                            <h3>{{ $tc('lengow-connector.legals.address') }}</h3>\n                            <span>6 rue Ren\xe9 Viviani 44200 Nantes</span>\n                            <br/><br/><br/>\n                        </div>\n                        <div>\n                            <h3>{{ $tc('lengow-connector.legals.contact') }}</h3>\n                            <span>Email : contact@lengow.com<br/>Phone: +33 (0)2 85 52 64 14</span>\n                            <br/><br/><br/>\n                        </div>\n                        <div>\n                            <h3>{{ $tc('lengow-connector.legals.hosting') }}</h3>\n                            <span>OXALIDE<br/>RCS Paris : 803 816 529<br/>25 Boulevard de Strasbourg – 75010 Paris<br/>+33 (0)1 75 77 16 66</span>\n                        </div>\n                    {% endblock %}\n                </sw-card>\n                <lgw-footer></lgw-footer>\n            </sw-card-view>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n"}),n(7099);let{Component:H,Mixin:V,Data:{Criteria:K}}=Shopware;H.register("lgw-order-list",{template:'{% block lgw_order_list %}\n    <sw-page class="sw-order-list">\n        {% block lgw_order_list_search_bar %}\n            <template #search-bar>\n                <sw-search-bar initialSearchType="lengow_order"\n                               :placeholder="$tc(\'lengow-connector.order.filter.search_placeholder\')"\n                               @search="onSearch">\n                </sw-search-bar>\n            </template>\n        {% endblock %}\n\n        {% block lgw_order_list_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block lgw_order_list_smart_bar_header_title %}\n                    <h2>\n                        {% block lgw_order_list_smart_bar_header_title_text %}\n                            {{ $tc(\'lengow-connector.page.orders\') }}\n                        {% endblock %}\n                        {% block lgw_order_list_smart_bar_header_amount %}\n                            <span v-if="!isLoading" class="sw-page__smart-bar-amount">\n                                ({{ total }})\n                            </span>\n                        {% endblock %}\n                    </h2>\n                    <span v-if="debugMode" class="blue-frame">\n                        {{ $tc(\'lengow-connector.order.debug_warning_message\') }}\n                    </span>\n                    <div id="lgw-sync-data">\n                        <div v-if="!settingsLoading && !orderWithErrorLoading && !orderWaitingToBeSentLoading">\n                            <p>\n                                {{ orderWithError }} {{ $tc(\'lengow-connector.order.order_with_error\') }},\n                                {{ orderWaitingToBeSent }} {{ $tc(\'lengow-connector.order.order_waiting_to_be_sent\') }}\n                            </p>\n                            <p v-if="Object.keys(lastSynchronisation).length !== 0">\n                                {{ $tc(\'lengow-connector.order.last_synchronisation\') }}\n                                {{ formatDate(lastSynchronisation.date) }}\n                            </p>\n                            <p v-else>\n                                {{ $tc(\'lengow-connector.order.no_synchronisation\') }}\n                            </p>\n                            <p v-if="reportMailEnabled">\n                                {{ $tc(\'lengow-connector.order.report_sent_to\') }}\n                                <span v-if="reportMailAddress" >{{ reportMailAddress }}</span>\n                                <span v-else>{{ defaultEmail }}</span>\n                            </p>\n                            <p v-else>\n                                {{ $tc(\'lengow-connector.order.no_report_sent\') }}\n                                <routerLink :to="{ name: \'lengow.connector.settings\' }">\n                                    {{ $tc(\'lengow-connector.order.change_this\') }}\n                                </routerLink>\n                            </p>\n                        </div>\n                        <sw-loader v-else size="20px"></sw-loader>\n                    </div>\n                {% endblock %}\n            </template>\n        {% endblock %}\n        {% block lgw_order_list_smart_bar_actions %}\n            <template #smart-bar-actions>\n                {% block lgw_order_list_smart_bar_actions_slot %}\n\n                    {% block lgw_order_list_smart_bar_actions_synchronise %}\n                        <sw-button variant="primary"\n                                   @click="synchroniseOrders"\n                                   :isLoading="isLoading">\n                            {{ $tc(\'lengow-connector.order.synchronise_orders\') }}\n                        </sw-button>\n                    {% endblock %}\n\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block lgw_order_list_content %}\n            <template #content>\n                <div id="lgw-order-grid">\n                    {% block lgw_order_list_grid %}\n                        <sw-data-grid ref="swLengowOrderGrid"\n                                            :dataSource="lengowOrders"\n                                           :columns="lengowOrderColumns"\n                                           :repository="lengowOrderRepository"\n                                           :showSelection="true"\n                                           :showActions="false"\n                                           :allowDelete="false"\n                                           @selection-change="updateSelection">\n                            <template #bulk>\n                                {% block sw_data_grid_bulk_selected_actions_content %}\n                                    <span class="sw-data-grid__bulk-selected bulk-link">\n                                        <a class="link link-default" @click="massReImportOrders">\n                                            {{ $tc(\'lengow-connector.order.mass_action_reimport\') }}\n                                        </a>\n                                        <a class="link link-default" @click="massReSendActions">\n                                            {{ $tc(\'lengow-connector.order.mass_action_resend\') }}\n                                        </a>\n                                    </span>\n                                {% endblock %}\n                            </template>\n                            {% block lgw_order_list_grid_columns %}\n                                {% block lgw_order_list_grid_columns_order_is_in_error %}\n                                    <template #column-isInError="{ item }">\n                                        <lgw-action-button v-if="item.isInError && item.orderProcessState !== 2"\n                                                           :lengowOrderId="item.id"\n                                                           :orderProcessState="item.orderProcessState"\n                                                           :onRefresh="onRefresh">\n                                        </lgw-action-button>\n                                        <div v-else>\n                                            <div v-if="item.order && item.orderProcessState === 1">\n                                                <lgw-action-label :orderId="item.order.id">\n                                                </lgw-action-label>\n                                            </div>\n                                            <div v-else>\n                                            </div>\n                                        </div>\n                                    </template>\n                                {% endblock %}\n                                {% block lgw_order_list_grid_columns_order_lengow_state %}\n                                    <template #column-orderLengowState="{ item }">\n                                        <lgw-order-state-label :orderLengowState="item.orderLengowState">\n                                        </lgw-order-state-label>\n                                    </template>\n                                {% endblock %}\n                                {% block lgw_order_list_grid_columns_order_types %}\n                                    <template #column-orderTypes="{ item }">\n                                        <div v-if="Object.keys(item.orderTypes).length">\n                                            <lgw-order-type-icon v-for="orderType in getOrderTypes(item.orderTypes)"\n                                                                 :type="orderType.type"\n                                                                 :label="orderType.label">\n                                            </lgw-order-type-icon>\n                                        </div>\n                                        <div v-else></div>\n                                    </template>\n                                {% endblock %}\n                                {% block lgw_order_list_grid_columns_order_state %}\n                                    <template #column-order.stateMachineState.name="{ item }">\n                                        <sw-label v-if="item.order" :variant="getVariantFromOrderState(item.order)" appearance="pill">\n                                            {{ item.order.stateMachineState.translated.name }}\n                                        </sw-label>\n                                    </template>\n                                {% endblock %}\n                                {% block lgw_order_list_grid_columns_order_number %}\n                                    <template #column-order.orderNumber="{ item }">\n                                        <template v-if="item.order">\n                                            <router-link :to="{ name: \'sw.order.detail\', params: { id: item.order.id } }">\n                                                {{ item.order.orderNumber }}\n                                            </router-link>\n                                        </template>\n                                    </template>\n                                {% endblock %}\n                                {% block lgw_order_list_grid_columns_order_date %}\n                                    <template #column-orderDate="{ item }">\n                                        {{ formatDate(item.orderDate) }}\n                                    </template>\n                                {% endblock %}\n                                {% block lgw_order_list_grid_columns_delivery_country_iso %}\n                                    <template #column-deliveryCountryIso="{ item }">\n                                        <lgw-country-icon :codeIsoA2="item.deliveryCountryIso">\n                                        </lgw-country-icon>\n                                    </template>\n                                {% endblock %}\n                                {% block lgw_order_list_grid_columns_total_paid %}\n                                    <template #column-totalPaid="{ item }">\n                                        <span :title="getOrderItemTooltip(item)">\n                                          {{ currency(item.totalPaid, item.currency) }}\n                                        </span>\n                                    </template>\n                                {% endblock %}\n                            {% endblock %}\n                        </sw-data-grid>\n                    {% endblock %}\n\n                    {% block lgw_order_list_empty_state %}\n                        <sw-empty-state\n                                v-if="!isLoading && !total"\n                                :title="$tc(\'lengow-connector.order.no_order_title\')"\n                                :subline="$tc(\'lengow-connector.order.no_order_description\')">\n                        </sw-empty-state>\n                    {% endblock %}\n\n                    {% block lgw_order_list_grid_loader %}\n                        <sw-loader v-if="isLoading"></sw-loader>\n                    {% endblock %}\n\n                    {% block lgw_order_list_modal %}\n                        <sw-modal v-if="showSyncModal"\n                                  @modal-close="onCloseSynResultModal"\n                                  :title="syncModalTitle"\n                                  variant="default">\n                            <ul>\n                                <li v-for="message in syncModalMessages">\n                                    {{ message }}\n                                </li>\n                            </ul>\n                        </sw-modal>\n                    {% endblock %}\n\n                </div>\n            </template>\n\n            {% block lgw_order_list_sidebar %}\n                <template #sidebar>\n                    <sw-sidebar class="sw-order-list__sidebar">\n                        {% block lgw_order_list_sidebar_refresh %}\n                            <sw-sidebar-item\n                                    icon="solid-redo"\n                                    :title="$tc(\'sw-order.list.titleSidebarItemRefresh\')"\n                                    @click="onRefresh">\n                            </sw-sidebar-item>\n                        {% endblock %}\n\n                        {% block lgw_order_list_sidebar_filter %}\n                            <sw-sidebar-item icon="solid-filter"\n                                             :title="$tc(\'sw-order.list.titleSidebarItemFilter\')">\n\n                                {% block lgw_order_list_sidebar_filter_items %}\n\n                                    {% block lgw_order_list_sidebar_filter_order_state %}\n                                        <sw-multi-select\n                                                :label="$tc(\'lengow-connector.order.filter.order_state\')"\n                                                :options="availableOrderLengowStates"\n                                                :isLoading="filterLoading"\n                                                :value="orderLengowStateFilter"\n                                                    @update:value="onChangeOrderLengowStateFilter"\n                                                    @change="onChangeOrderLengowStateFilter"\n                                        >\n                                        </sw-multi-select>\n                                    {% endblock %}\n\n                                    {% block lgw_order_list_sidebar_filter_order_type %}\n                                        <sw-single-select\n                                                :label="$tc(\'lengow-connector.order.filter.order_type\')"\n                                                :options="availableOrderTypes"\n                                                :isLoading="filterLoading"\n                                                :value="orderTypeFilter"\n                                                @update:value="onChangeOrderTypeFilter"\n                                                @change="onChangeOrderTypeFilter"\n                                        >\n                                        </sw-single-select>\n                                    {% endblock %}\n\n                                    {% block lgw_order_list_sidebar_filter_marketplace %}\n                                        <sw-multi-select\n                                                :label="$tc(\'lengow-connector.order.filter.marketplace\')"\n                                                :options="availableMarketplaces"\n                                                :isLoading="filterLoading"\n                                                :value="marketplaceFilter"\n                                                @update:value="onChangeMarketplaceFilter"\n                                                @change="onChangeMarketplaceFilter"\n                                        >\n                                        </sw-multi-select>\n                                    {% endblock %}\n\n                                {% endblock %}\n                            </sw-sidebar-item>\n                        {% endblock %}\n                    </sw-sidebar>\n                </template>\n            {% endblock %}\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory","stateStyleDataProviderService","acl","LengowConnectorOrderService"],mixins:[V.getByName("listing")],data(){return{lengowOrders:[],sortBy:"orderDate",sortDirection:"DESC",isLoading:!1,filterLoading:!1,showSyncModal:!1,searchFilter:"",orderLengowStateFilter:[],orderTypeFilter:"",marketplaceFilter:[],availableOrderLengowStates:[],availableOrderTypes:[],availableMarketplaces:[],syncModalTitle:"",syncModalMessages:[],orderWithError:0,orderWaitingToBeSent:0,reportMailEnabled:!1,reportMailAddress:"",defaultMail:"",lastSynchronisation:{},settingsLoading:!1,orderWithErrorLoading:!1,orderWaitingToBeSentLoading:!1,selection:[],debugMode:!1}},created(){this.loadFilterValues(),this.loadSyncData()},metaInfo(){return{title:this.$createTitle()}},computed:{lengowOrderRepository(){return this.repositoryFactory.create("lengow_order")},lengowSettingsRepository(){return this.repositoryFactory.create("lengow_settings")},systemConfigRepository(){return this.repositoryFactory.create("system_config")},lengowOrderColumns(){return this.getLengowOrderColumns()},lengowOrderCriteria(){let e=new K(this.page,this.limit);return e.setTerm(this.term),this.orderLengowStateFilter.length>0&&e.addFilter(K.equalsAny("orderLengowState",this.orderLengowStateFilter)),this.orderTypeFilter&&(this.orderTypeFilter===i.express?e.addFilter(K.multi("OR",[K.contains("orderTypes",i.express),K.contains("orderTypes",i.prime)])):e.addFilter(K.contains("orderTypes",this.orderTypeFilter))),this.marketplaceFilter.length>0&&e.addFilter(K.equalsAny("marketplaceName",this.marketplaceFilter)),this.searchFilter&&e.addFilter(K.multi("OR",[K.contains("marketplaceSku",this.searchFilter),K.contains("customerName",this.searchFilter)])),e.addSorting(K.sort(this.sortBy,this.sortDirection)).addAssociation("salesChannel").addAssociation("order").addAssociation("order.stateMachineState"),e},getAvailableOrderLengowStates(){return[{label:this.$tc("lengow-connector.order.state.accepted"),value:o.accepted},{label:this.$tc("lengow-connector.order.state.waiting_shipment"),value:o.waiting_shipment},{label:this.$tc("lengow-connector.order.state.shipped"),value:o.shipped},{label:this.$tc("lengow-connector.order.state.refunded"),value:o.refunded},{label:this.$tc("lengow-connector.order.state.closed"),value:o.closed},{label:this.$tc("lengow-connector.order.state.canceled"),value:o.canceled},{label:this.$tc("lengow-connector.order.state.partial_refunded"),value:o.partial_refunded}]},getAvailableOrderTypes(){return[{label:this.$tc("lengow-connector.order.filter.default_order_type"),value:""},{label:this.$tc("lengow-connector.order.type.express"),value:i.express},{label:this.$tc("lengow-connector.order.type.delivered_by_marketplace"),value:i.delivered_by_marketplace},{label:this.$tc("lengow-connector.order.type.business"),value:i.business}]}},methods:{currency(e,t){return new Intl.NumberFormat("en-US",{style:"currency",currency:t}).format(e)},formatDate(e){return!(e instanceof Date)||isNaN(e.getTime())?"":new Intl.DateTimeFormat(navigator.language.substring(0,2),{hour:"2-digit",minute:"2-digit"}).format(e)},getList(){return this.isLoading=!0,console.log("test"),this.lengowOrderRepository.search(this.lengowOrderCriteria,Shopware.Context.api).then(e=>(console.log(e),this.total=e.total,this.lengowOrders=e,e)).finally(()=>{this.isLoading=!1})},getLengowOrderColumns(){return[{property:"isInError",label:"lengow-connector.order.column.actions",align:"center",allowResize:!0},{property:"orderLengowState",label:"lengow-connector.order.column.lengow_status",align:"center",allowResize:!0},{property:"orderTypes",label:"lengow-connector.order.column.order_types",align:"center",allowResize:!0},{property:"marketplaceSku",label:"lengow-connector.order.column.marketplace_sku",allowResize:!0},{property:"marketplaceLabel",label:"lengow-connector.order.column.marketplace",allowResize:!0},{property:"salesChannel.name",label:"lengow-connector.order.column.sales_channel_name",allowResize:!0},{property:"order.stateMachineState.name",label:"lengow-connector.order.column.shopware_status",allowResize:!0},{property:"order.orderNumber",label:"lengow-connector.order.column.shopware_sku",allowResize:!0},{property:"customerName",label:"lengow-connector.order.column.customer_name",allowResize:!0},{property:"orderDate",label:"lengow-connector.order.column.order_date",allowResize:!0},{property:"deliveryCountryIso",label:"lengow-connector.order.column.country",align:"center",allowResize:!0},{property:"totalPaid",label:"lengow-connector.order.column.total_paid",align:"right",allowResize:!0}]},getVariantFromOrderState(e){return this.stateStyleDataProviderService.getStyle("order.state",e.stateMachineState.technicalName).variant},getOrderTypes(e){let t=[];return Object.keys(e).forEach(n=>{t.push({type:n,label:e[n]})}),t},getOrderItemTooltip(e){return`${e.orderItem.toString()} ${this.$tc("lengow-connector.order.nb_product")}`},loadFilterValues(){this.filterLoading=!0,this.availableOrderLengowStates=this.getAvailableOrderLengowStates,this.availableOrderTypes=this.getAvailableOrderTypes,this.LengowConnectorOrderService.getAvailableMarketplaces().then(e=>{this.availableMarketplaces=e}).finally(()=>{this.filterLoading=!1})},onSearch(e){this.searchFilter=e,this.getList()},onChangeOrderLengowStateFilter(e){this.orderLengowStateFilter=e,this.getList()},onChangeOrderTypeFilter(e){this.orderTypeFilter=e,this.getList()},onChangeMarketplaceFilter(e){this.marketplaceFilter=e,this.getList()},onRefresh(){this.searchFilter="",this.orderLengowStateFilter=[],this.orderTypeFilter="",this.marketplaceFilter=[],this.getList(),this.loadSyncData()},onCloseSynResultModal(){this.showSyncModal=!1},updateSelection(e){this.selection=Object.values(e)},loadSyncData(){this.loadDefaultEmail(),this.loadSettings(),this.loadOrderWithError(),this.loadOrderWaitingToBeSent()},loadSettings(){this.settingsLoading=!0;let e=new K;e.addFilter(K.equalsAny("name",["lengowLastImportCron","lengowLastImportManual","lengowReportMailEnabled","lengowReportMailAddress","lengowDebugEnabled"])),this.lengowSettingsRepository.search(e,Shopware.Context.api).then(e=>{let t=[];e.total>0&&e.forEach(e=>{t[e.name]=e.value}),"1"===t.lengowDebugEnabled&&(this.debugMode=!0),void 0!==t.lengowLastImportCron&&void 0!==t.lengowLastImportManual&&(this.lastSynchronisation=this.getLastSynchronisationDate(t.lengowLastImportCron,t.lengowLastImportManual)),void 0!==t.lengowReportMailEnabled&&(this.reportMailEnabled="1"===t.lengowReportMailEnabled),void 0!==t.lengowReportMailAddress&&t.lengowReportMailAddress&&(this.reportMailAddress=this.cleanReportMailAddresses(t.lengowReportMailAddress))}).finally(()=>{this.settingsLoading=!1})},getLastSynchronisationDate(e,t){return e&&t?parseInt(e,10)>parseInt(t,10)?{type:l.cron,date:new Date(1e3*parseInt(e,10))}:{type:l.manual,date:new Date(1e3*parseInt(t,10))}:e&&!t?{type:l.cron,date:new Date(1e3*parseInt(e,10))}:t&&!e?{type:l.manual,date:new Date(1e3*parseInt(t,10))}:{}},loadDefaultEmail(){let e=new K;e.addFilter(K.contains("configurationKey","core.basicInformation.email")),this.systemConfigRepository.search(e,Shopware.Context.api).then(e=>{e.total>0&&(this.defaultEmail=e.first().configurationValue)})},cleanReportMailAddresses(e){return e.trim().replaceAll("\r\n",",").replaceAll(";",",").replaceAll(" ",",").replaceAll(",",", ")},loadOrderWithError(){this.orderWithErrorLoading=!0;let e=new K;e.addFilter(K.contains("isInError","1")),this.lengowOrderRepository.search(e,Shopware.Context.api).then(e=>{this.orderWithError=parseInt(e.total,10)}).finally(()=>{this.orderWithErrorLoading=!1})},loadOrderWaitingToBeSent(){this.orderWaitingToBeSentLoading=!0;let e=new K;e.addFilter(K.contains("orderProcessState","1")),this.lengowOrderRepository.search(e,Shopware.Context.api).then(e=>{this.orderWaitingToBeSent=parseInt(e.total,10)}).finally(()=>{this.orderWaitingToBeSentLoading=!1})},synchroniseOrders(){this.isLoading=!0,this.LengowConnectorOrderService.synchroniseOrders().then(e=>{this.syncModalTitle=this.$tc("lengow-connector.order.sync_modal_title_order"),this.syncModalMessages=e,this.showSyncModal=!0,this.onRefresh()}).finally(()=>{this.isLoading=!1})},massReImportOrders(){this.isLoading=!0;let e=[];this.selection.forEach(t=>{t.isInError&&0===t.orderProcessState&&(e=[...e,t.id])}),this.LengowConnectorOrderService.massReImportOrders({lengowOrderIds:e}).then(e=>{this.syncModalTitle=this.$tc("lengow-connector.order.sync_modal_title_order"),this.syncModalMessages=e,this.showSyncModal=!0,this.onRefresh()}).finally(()=>{this.isLoading=!1})},massReSendActions(){this.isLoading=!0;let e=[];this.selection.forEach(t=>{t.isInError&&1===t.orderProcessState&&(e=[...e,t.id])}),this.LengowConnectorOrderService.massReSendActions({lengowOrderIds:e}).then(e=>{this.syncModalTitle=this.$tc("lengow-connector.order.sync_modal_title_action"),this.syncModalMessages=e,this.showSyncModal=!0,this.onRefresh()}).finally(()=>{this.isLoading=!1})}}}),n(9073);let{Component:Z,Mixin:W,Data:{Criteria:J}}=Shopware;Z.register("lgw-product-list",{template:'{% block lgw_product_list %}\n    <sw-page class="lgw-product-list">\n        {% block lgw_product_list_search_bar %}\n            <template #search-bar>\n                <sw-search-bar initialSearchType="lengow_product"\n                               :placeholder="$tc(\'lengow-connector.product.filter.search_filter_label\')"\n                               @search="onSearchFilter">\n                </sw-search-bar>\n            </template>\n        {% endblock %}\n        {% block lgw_product_list_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block lgw_product_list_smart_bar_header_title %}\n                    <h2>\n                        {% block lgw_product_list_smart_bar_header_title_text %}\n                            {{ $tc(\'lengow-connector.page.products\') }}\n                            <lgw-debug-warning></lgw-debug-warning>\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n        {% block lgw_product_list_content %}\n            <template #content>\n                <div class="lgw-container">\n                    \n                    {% block lgw_product_list_choose_sales_channel %}\n                        <div class="sw-system-config__global-sales-channel-switch">\n                            <sw-sales-channel-switch ref="lgwSalesChannelSwitch" @change-sales-channel-id="onSalesChannelChanged">\n                            </sw-sales-channel-switch>\n                        </div>\n                    {% endblock %}\n                    {% block lgw_product_list_filters %}\n                        <div class="sw-card__content" v-if="salesChannelSelected">\n                            <div class="lengow-box text-center">\n                                <div>\n                                    <a :href="downloadLink">\n                                        <span class="lgw-download-icon">\n                                            <sw-icon name="regular-cloud-download" color="#3498db"></sw-icon>\n                                        </span>\n                                    </a>\n                                </div>\n                                <div v-if="!isLoading" class="lgw-tooltip">\n                                    <span class="stats-big-value">{{ salesChannelName }}</span>\n                                    <span class="lgw-tooltip-text">\n                                        {{ currentSalesChannelId }}\n                                        {{ salesChannelDomain }}\n                                    </span>\n                                </div>\n                                <div class="lgw-count">\n                                    <div v-if="!countLoading" class="margin-standard text-center" >\n                                        <p class="products-exported small light">\n                                            {{ $tc(\'lengow-connector.product.data.nb_product_export_label\') }}\n                                            <span class="stats-big-value">{{ exportedCount }}</span>\n                                        </p>\n                                        <p class="products-available small light">\n                                            {{ $tc(\'lengow-connector.product.data.nb_product_exportable_label\') }}\n                                            <span class="stats-big-value">{{ exportableCount }}</span>\n                                        </p>\n                                    </div>\n                                    <div v-else class="margin-standard text-center lgw-count-loader">\n                                        <sw-loader size="20px"></sw-loader>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="lgw-float-center">\n                                <sw-switch-field class="text-center"\n                                                 v-model="productSelection"\n                                                 :label="$tc(\'lengow-connector.product.activate_selection_label\')"\n                                                @update:value="onActivateSelection"\n                                                @change="onActivateSelection"\n                                >\n                                </sw-switch-field>\n                            </div>\n                            <hr /><br/>\n                        </div>\n                    {% endblock %}\n                    {% block lgw_product_list_content_section %}\n                        <div class="lgw-product-grid"  v-if="(salesChannelSelected && productSelection)">\n                            {% block lgw_product_list_content_grid %}\n                                <sw-data-grid\n                                                    ref="swProductGrid"\n                                                    :dataSource="products"\n                                                   :columns="productColumns"\n                                                   :repository="productRepository"\n                                                   detailRoute="sw.product.detail"\n                                                   :showSelection="true"\n                                                   :isLoading="isLoading"\n                                                   @column-sort="onStartSorting"\n                                                   @selections="updateSelection"\n                                                   @update-records="onColumnSort"\n                                >\n                                    <template #delete-action>\n                                        <span></span> \n                                    </template>\n                                    <template slot="bulk">\n                                        {% block sw_data_grid_bulk_selected_count %}\n                                            <span class="sw-data-grid__bulk-selected bulk-link">\n                                                {{ $tc(\'lengow-connector.product.total_selected\') }} :\n                                            </span>\n                                            <span class="sw-data-grid__bulk-selected sw-data-grid__bulk-selected-count">{{ totalSelected }}</span>\n                                        {% endblock %}\n                                        {% block sw_data_grid_bulk_selected_actions_content %}\n                                            <span class="sw-data-grid__bulk-selected bulk-link">\n                                                <a class="link link-default" @click="onPublishOnLengow">\n                                                    {{ $tc(\'lengow-connector.product.mass_action_publish\') }}\n                                                </a>\n                                            </span>\n                                            <span class="sw-data-grid__bulk-selected bulk-link">\n                                                <a class="link link-default" @click="onUnpublishOnLengow">\n                                                    {{ $tc(\'lengow-connector.product.mass_action_unpublish\') }}\n                                                </a>\n                                            </span>\n                                        {% endblock %}\n                                    </template>\n                                    {% block lgw_product_list_grid_columns %}\n                                        {% block lengow_export_product_list_grid_columns_name_preview %}\n                                            <template #preview-name="{ item }">\n                                                <sw-media-preview-v2 :source="item.cover ? item.cover.media : null"></sw-media-preview-v2>\n                                            </template>\n                                        {% endblock %}\n                                        {% block lgw_product_list_grid_columns_active %}\n                                            <template #column-active="{ item }">\n                                                {% block lgw_product_list_grid_columns_active_content %}\n                                                    <template>\n                                                        <sw-icon v-if="item.active" name="solid-checkmark-s" small class="is--active"></sw-icon>\n                                                        <sw-icon v-else name="regular-times-xs" small class="is--inactive"></sw-icon>\n                                                    </template>\n                                                {% endblock %}\n                                            </template>\n                                            <template #column-extensions.activeInLengow.active="{ item }">\n                                                {% block lgw_product_list_grid_columns_activeInLengow_content %}\n                                                    <template>\n                                                        <sw-switch-field\n                                                                class="lgw-no-background"\n                                                                v-model="item.extensions.activeInLengow.active"\n                                                                :label="$tc(\'lengow-connector.product.column.activate\')"\n                                                                @update:value="OnActivateOnLengow({ item })"\n                                                                @change="OnActivateOnLengow({ item })"\n                                                        ></sw-switch-field>\n                                                    </template>\n                                                {% endblock %}\n                                            </template>\n                                        {% endblock %}\n                                        {% block lgw_product_list_grid_columns_price %}\n                                            <template v-for="currency in currencies"\n                                                      :slot="`column-price-${currency.isoCode}`"\n                                                      slot-scope="{ item }">\n                                                {{ getCurrencyPriceByCurrencyId(currency.id, item.price).gross | currency(currency.isoCode) }}\n                                            </template>\n                                        {% endblock %}\n                                        {% block lgw_product_list_grid_columns_stock %}\n                                            <template #column-stock="{ item, compact }">\n                                                {% block lgw_product_list_grid_columns_stock_content %}\n                                                    <template>\n                                                        {{ item.stock }}\n                                                        <sw-color-badge :variant="item.stock | stockColorVariant"></sw-color-badge>\n                                                    </template>\n                                                {% endblock %}\n                                            </template>\n                                        {% endblock %}\n                                    {% endblock %}\n                                </sw-data-grid>\n                            {% endblock %}\n                            {% block lgw_product_list_grid_loader %}\n                                <sw-loader v-if="isLoading || !salesChannelSelected"></sw-loader>\n                            {% endblock %}\n                        </div>\n                    {% endblock %}\n                </div>\n            </template>\n            {% block lgw_product_list_sidebar %}\n                <template #sidebar>\n                    <sw-sidebar v-if="productSelection" class="sw-order-list__sidebar lengow-filter-sidebar">\n                        {% block lgw_product_list_sidebar_refresh %}\n                            <sw-sidebar-item\n                                    icon="solid-redo"\n                                    :title="$tc(\'sw-order.list.titleSidebarItemRefresh\')"\n                                    @click="resetFilters">\n                            </sw-sidebar-item>\n                        {% endblock %}\n                        {% block lgw_product_list_sidebar_filter %}\n                            <sw-sidebar-item icon="regular-filter"\n                                             :title="$tc(\'sw-order.list.titleSidebarItemFilter\')"\n                                             class="lengow-filter-sidebar_item">\n                                {% block lgw_product_list_sidebar_filter_items %}\n                                    {% block lgw_product_list_sidebar_filter_active %}\n                                        <sw-single-select\n                                                v-model="activeFilterText"\n                                                :options="isActiveOptions"\n                                                :label="$tc(\'lengow-connector.product.filter.active_filter_label\')"\n                                                @update:value="onActiveFilter"\n                                                @change="onActiveFilter"\n                                        >\n                                        </sw-single-select>\n                                    {% endblock %}\n                                    {% block lgw_product_list_sidebar_filter_stock %}\n                                        <sw-single-select\n                                                v-model="stockFilterText"\n                                                :options="isWithStockOptions"\n                                                :label="$tc(\'lengow-connector.product.filter.stock_filter_label\')"\n                                                @update:value="onStockFilter"\n                                                @change="onStockFilter"\n                                        >\n                                        </sw-single-select>\n                                    {% endblock %}\n                                {% endblock %}\n                            </sw-sidebar-item>\n                        {% endblock %}\n                    </sw-sidebar>\n                </template>\n            {% endblock %}\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory","numberRangeService","acl","LengowConnectorExportService"],mixins:[W.getByName("notification"),W.getByName("listing"),W.getByName("placeholder")],props:{salesChannelId:{type:String,required:!1,default:null}},data(){return{products:[],currencies:[],sortBy:"productNumber",sortDirection:"DESC",naturalSorting:!0,isLoading:!1,total:0,product:null,defaultSalesChannel:null,currentSalesChannelId:this.salesChannelId,currentEntryPoint:null,salesChannelModel:null,searchFilterText:"",stockFilterText:"",activeFilterText:"",salesChannelSelected:!1,productIds:[],baseProducts:[],filteredResult:[],filters:{stock:null,active:null,search:null},productSelection:!1,productSelectionSelectAll:!1,selection:[],totalSelected:0,exportedCount:0,exportableCount:0,countLoading:!0,salesChannelName:"",salesChannelDomain:"",tempListActivated:[],downloadLink:""}},created(){this.salesChannelRepository.search(new J,Shopware.Context.api).then(e=>{let t=e.first().id;this.defaultSalesChannel=t,this.onSalesChannelChanged(t)}),this.SEARCHFILTER="search",this.ACTIVEFILTER="active",this.STOCKFILTER="stock"},metaInfo(){return{title:this.$createTitle()}},computed:{salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},productRepository(){return this.repositoryFactory.create("product")},categoryRepository(){return this.repositoryFactory.create("category")},productColumns(){return this.getProductColumns()},currencyRepository(){return this.repositoryFactory.create("currency")},lengowProductRepository(){return this.repositoryFactory.create("lengow_product")},systemConfigRepository(){return this.repositoryFactory.create("system_config")},lengowSettingsRepository(){return this.repositoryFactory.create("lengow_settings")},currenciesColumns(){return this.currencies.sort((e,t)=>t.isSystemDefault?1:-1).map(e=>({property:`price-${e.isoCode}`,dataIndex:`price.${e.id}`,label:`${e.name}`,allowResize:!0,currencyId:e.id,visible:e.isSystemDefault,align:"right",useCustomSort:!0}))},isActiveOptions(){return[{label:this.$tc("lengow-connector.product.filter.option_all"),value:"all"},{label:this.$tc("lengow-connector.product.filter.active_option_active"),value:"active"},{label:this.$tc("lengow-connector.product.filter.active_option_inactive"),value:"inactive"}]},isWithStockOptions(){return[{label:this.$tc("lengow-connector.product.filter.option_all"),value:"all"},{label:this.$tc("lengow-connector.product.filter.stock_option_with_stock"),value:"stock"},{label:this.$tc("lengow-connector.product.filter.stock_option_without_stock"),value:"nostock"}]}},filters:{stockColorVariant(e){return e>25?"success":e<25&&e>0?"warning":"error"}},methods:{applyOtherFilter(e,t){let n=e;return t!==this.ACTIVEFILTER&&this.filters.active&&(n=this.activeFilter(n,this.filters.active)),t!==this.STOCKFILTER&&this.filters.stock&&(n=this.stockFilter(n,this.filters.stock)),t!==this.SEARCHFILTER&&this.filters.search&&(n=this.searchFilter(n,this.filters.search)),n},activeFilter(e,t){return"all"===t||null===t?(this.filters.active=null,e):e.filter(e=>"active"===t?!0===e.active:!1===e.active)},stockFilter(e,t){return"all"===t||null===t?(this.filters.stock=null,e):e.filter(e=>"stock"===t?e.availableStock>0:e.availableStock<=0)},searchFilter(e,t){return t?e.filter(e=>e.id.toLowerCase().includes(t.toLowerCase())||e.productNumber.toLowerCase().includes(t.toLowerCase())||e.name.toLowerCase().includes(t.toLowerCase())):(this.filters.search=null,e)},onActiveFilter(e){this.salesChannelSelected&&(this.filteredResult=this.applyOtherFilter(this.baseProducts,"active"),this.filters.active=e,this.products=this.activeFilter(this.filteredResult,e))},onStockFilter(e){this.salesChannelSelected&&(this.filteredResult=this.applyOtherFilter(this.baseProducts,"stock"),this.filters.stock=e,this.products=this.stockFilter(this.filteredResult,e))},onSearchFilter(e){this.salesChannelSelected&&(this.filteredResult=this.applyOtherFilter(this.baseProducts,"search"),this.filters.search=e,this.products=this.searchFilter(this.filteredResult,e))},resetFilters(){this.filters.active=null,this.filters.stock=null,this.filters.search=null,this.searchFilterText="",this.stockFilterText="all",this.activeFilterText="all",this.onActiveFilter("all"),this.onStockFilter("all")},setupSelectionActivated(){let e=new J;e.addFilter(J.equals("salesChannelId",this.currentSalesChannelId)),e.addFilter(J.equals("name","lengowSelectionEnabled")),this.lengowSettingsRepository.search(e,Shopware.Context.api).then(e=>{e.total>0&&(this.productSelection="1"===e.first().value)})},setExportLink(e){this.LengowConnectorExportService.getExportLink(e).then(e=>{e.success&&(this.downloadLink=e.link)})},setupExportedCount(){this.LengowConnectorExportService.getExportCount(this.currentSalesChannelId).then(e=>{e.success&&(this.exportableCount=e.total,this.exportedCount=e.exported)}).finally(()=>{this.countLoading=!1})},onSalesChannelChanged(e){this.salesChannelSelected=!0,this.isLoading=!0,this.countLoading=!0,this.resetFilters(),this.currentSalesChannelId=e||this.defaultSalesChannel,this.setupSelectionActivated(),this.setExportLink(this.currentSalesChannelId),this.LengowConnectorExportService.getProductList(this.currentSalesChannelId).then(e=>(this.productIds=e.productList,this.updateProductList().then(()=>{let e=new J;return e.setIds([this.currentSalesChannelId]),e.addAssociation("domains"),this.salesChannelRepository.search(e,Shopware.Context.api).then(e=>{e.first()&&(this.salesChannelName=e.first().name,e.first().domains.first()?this.salesChannelDomain=e.first().domains.first().url:this.salesChannelDomain="Headless")})}))).finally(()=>{this.isLoading=!1})},updateProductList(){this.total=this.products.total;let e=new J;this.naturalSorting="productNumber"===this.sortBy,console.log(this.productIds),e.addFilter(J.equalsAny("product.id",this.productIds)),e.addSorting(J.sort(this.sortBy,this.sortDirection,this.naturalSorting)),e.addAssociation("cover"),e.addAssociation("manufacturer");let t=new J(1,500);return Promise.all([this.productRepository.search(e,Shopware.Context.api),this.currencyRepository.search(t,Shopware.Context.api)]).then(e=>{let[t,n]=e;this.total=t.total,t.forEach(e=>{e.extensions.activeInLengow.active=void 0!==e.extensions.activeInLengow.activeArray[this.currentSalesChannelId]}),this.products=t,this.baseProducts=this.products,this.currencies=n,this.isLoading=!1,this.productIds=[],this.setupExportedCount()}).catch(()=>{this.isLoading=!1,this.productIds=[]})},updateSelection(e){let t=Object.values(e);this.selection=[],t.forEach(e=>{this.selection.push(e.id)}),this.totalSelected=this.selection.length},onActivateSelection(e){let t=new J;t.addFilter(J.equals("salesChannelId",this.currentSalesChannelId)),t.addFilter(J.equals("name","lengowSelectionEnabled")),this.lengowSettingsRepository.search(t,Shopware.Context.api).then(t=>{if(0!==t.total){let n=this.lengowSettingsRepository.create(Shopware.Context.api);n.id=t.first().id,n.salesChannelsId=this.currentSalesChannelId,n.name="lengowSelectionEnabled",n.value=!0===e?"1":"0",this.lengowSettingsRepository.sync([n],Shopware.Context.api).then(()=>{this.onSalesChannelChanged(this.currentSalesChannelId)})}})},onPublishOnLengow(){let e=new J;e.addFilter(J.equalsAny("productId",this.selection)),e.addFilter(J.equals("salesChannelId",this.currentSalesChannelId)),this.lengowProductRepository.search(e,Shopware.Context.api).then(e=>{let t=[];e.forEach(e=>{t.push(e.productId)}),this.selection.filter(e=>!t.includes(e)).forEach(e=>{let t=this.lengowProductRepository.create(Shopware.Context.api);t.productId=e,t.salesChannelId=this.currentSalesChannelId,this.lengowProductRepository.save(t,Shopware.Context.api)}),this.onSalesChannelChanged(this.currentSalesChannelId)})},onUnpublishOnLengow(){let e=new J;e.addFilter(J.equalsAny("productId",this.selection)),e.addFilter(J.equals("salesChannelId",this.currentSalesChannelId)),this.lengowProductRepository.searchIds(e,Shopware.Context.api).then(e=>{e.data.forEach(e=>{this.lengowProductRepository.delete(e,Shopware.Context.api)}),this.onSalesChannelChanged(this.currentSalesChannelId)})},OnActivateOnLengow(e){let t=Object.values(e)[0],n=!t.extensions.activeInLengow.active;if(t.extensions.activeInLengow.active=n,t.extensions.activeInLengow.active){let e=this.lengowProductRepository.create(Shopware.Context.api);e.productId=t.id,e.salesChannelId=this.currentSalesChannelId,this.lengowProductRepository.save(e,Shopware.Context.api),this.countLoading=!0,this.LengowConnectorExportService.getProductCountValue(t.id,this.currentSalesChannelId).then(e=>{e.success&&(this.exportedCount+=e.countValue),this.countLoading=!1});return}let o=new J;o.addFilter(J.equals("productId",t.id)),o.addFilter(J.equals("salesChannelId",this.currentSalesChannelId)),this.lengowProductRepository.searchIds(o,Shopware.Context.api).then(e=>{this.lengowProductRepository.delete(e.data[0],Shopware.Context.api)}),this.countLoading=!0,this.LengowConnectorExportService.getProductCountValue(t.id,this.currentSalesChannelId).then(e=>{e.success&&(this.exportedCount-=e.countValue),this.countLoading=!1})},getCurrencyPriceByCurrencyId(e,t){return t.find(t=>t.currencyId===e)||{currencyId:null,gross:null,linked:!0,net:null}},getProductColumns(){return[{property:"extensions.activeInLengow.active",label:this.$tc("lengow-connector.product.column.active_in_lengow"),inlineEdit:"boolean",align:"center",allowResize:!1,sortable:!1},{property:"name",label:this.$tc("sw-product.list.columnName"),routerLink:"sw.product.detail",inlineEdit:"string",allowResize:!0,primary:!0},{property:"productNumber",naturalSorting:!0,label:this.$tc("sw-product.list.columnProductNumber"),align:"right",allowResize:!0},{property:"manufacturer.name",label:this.$tc("sw-product.list.columnManufacturer"),allowResize:!0},{property:"active",label:`${this.$tc("sw-product.list.columnActive")}`,inlineEdit:"boolean",allowResize:!0,align:"center"},...this.currenciesColumns,{property:"availableStock",label:this.$tc("sw-product.list.columnAvailableStock"),allowResize:!0,align:"right"}]},onStartSorting(){this.$refs.swProductGrid.records.forEach(e=>{!0!==this.$refs.swProductGrid.isSelected(e.id)&&e.extensions.activeInLengow.active&&this.tempListActivated.push(e.id)})},onColumnSort(){this.$refs.swProductGrid.records.forEach(e=>{!0!==this.$refs.swProductGrid.isSelected(e.id)&&this.tempListActivated.includes(e.id)?e.extensions.activeInLengow.active=!0:e.extensions.activeInLengow.active=void 0!==e.extensions.activeInLengow.activeArray[this.currentSalesChannelId]})}}}),n(6649);let{Component:Y,Mixin:Q,Data:{Criteria:X}}=Shopware;Y.register("lgw-setting",{template:'{% block lgw_setting %}\n    <sw-page :showSearchBar="false" class="lgw-setting">\n        {% block lgw_setting_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block lgw_setting_smart_bar_header_title %}\n                    <h2>\n                        {% block lgw_setting_smart_bar_header_title_text %}\n                            {{ $tc(\'lengow-connector.page.settings\') }}\n                            <lgw-debug-warning></lgw-debug-warning>\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n        {% block lgw_setting_content %}\n            <template #content>\n            <sw-card-view>\n                {% block lgw_setting_content_tabs %}\n                    <sw-tabs v-if="configLoaded">\n                        {% block lgw_toolbox_content_tabs_general %}\n                            <sw-tabs-item :title="$tc(\'lengow-connector.setting.nav_bar.general\')"\n                                          @click="onChangeSelectedTab(\'general\')">\n                                {{ $tc(\'lengow-connector.setting.nav_bar.general\') }}\n                            </sw-tabs-item>\n                        {% endblock %}\n                        {% block lgw_setting_content_tabs_export %}\n                            <sw-tabs-item :title="$tc(\'lengow-connector.setting.nav_bar.export\')"\n                                          @click="onChangeSelectedTab(\'export\')">\n                                {{ $tc(\'lengow-connector.setting.nav_bar.export\') }}\n                            </sw-tabs-item>\n                        {% endblock %}\n                        {% block lgw_setting_content_tabs_import %}\n                            <sw-tabs-item :title="$tc(\'lengow-connector.setting.nav_bar.import\')"\n                                          @click="onChangeSelectedTab(\'import\')">\n                                {{ $tc(\'lengow-connector.setting.nav_bar.import\') }}\n                            </sw-tabs-item>\n                        {% endblock %}\n                    </sw-tabs>\n                {% endblock %}\n                {% block lgw_setting_content_view %}\n                    <keep-alive v-if="configLoaded">\n                        <div>\n                            <lgw-setting-general v-if="selectedTabGeneral"\n                                                 :config="config"\n                                                 :onSaveSettings="onSaveSettings"\n                                                 :key="generalSettingsKey">\n                            </lgw-setting-general>\n                            <lgw-setting-export v-if="selectedTabExport"\n                                                :config="config"\n                                                :onSaveSettings="onSaveSettings">\n                            </lgw-setting-export>\n                            <lgw-setting-import v-if="selectedTabImport"\n                                                :config="config"\n                                                :onSaveSettings="onSaveSettings">\n                            </lgw-setting-import>\n                        </div>\n                    </keep-alive>\n                {% endblock %}\n                {% block lgw_setting_content_loader %}\n                    <sw-loader v-if="!configLoaded"></sw-loader>\n                {% endblock %}\n            </sw-card-view>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[Q.getByName("notification")],data(){return{selectedTabGeneral:!0,selectedTabExport:!1,selectedTabImport:!1,configLoaded:!1,config:{},generalSettingsKey:0}},async created(){return await this.loadConfig()},computed:{systemConfigRepository(){return this.repositoryFactory.create("system_config")},lengowConfigRepository(){return this.repositoryFactory.create("lengow_settings")},shippingMethodRepository(){return this.repositoryFactory.create("shipping_method")}},methods:{onChangeSelectedTab(e){switch(e){case"export":this.selectedTabExport=!0,this.selectedTabImport=!1,this.selectedTabGeneral=!1;break;case"import":this.selectedTabExport=!1,this.selectedTabImport=!0,this.selectedTabGeneral=!1;break;default:this.selectedTabExport=!1,this.selectedTabImport=!1,this.selectedTabGeneral=!0}},onSaveSettings(e,t,n){let o=!1,i=new X;n&&i.addFilter(X.equals("salesChannelId",n)),i.addFilter(X.equals("name",t)),this.lengowConfigRepository.search(i,Shopware.Context.api).then(n=>{if(n.total>0){let i=n.first();return"boolean"==typeof e?i.value=e?"1":"0":i.value=String(e),"lengowDebugEnabled"===t&&(o=!0),this.lengowConfigRepository.sync([i],Shopware.Context.api).then(e=>{if(o)return this.generalSettingsKey+=1,this.configLoaded=!1,this.loadConfig()})}}).finally(()=>{this.createNotificationInfo({message:`${this.$tc("lengow-connector.setting.lengow_main_setting.saved_message_1")} ${t} ${this.$tc("lengow-connector.setting.lengow_main_setting.saved_message_2")}`})})},async loadConfig(){let e=new X(1,500);return await this.lengowConfigRepository.search(e,Shopware.Context.api).then(e=>{e.forEach(e=>{e.salesChannel?(void 0===this.config[e.name]&&(this.config[e.name]=[]),this.config[e.name].push({name:e.name,value:e.value,salesChannel:e.salesChannel})):this.config[e.name]={name:e.name,value:e.value,salesChannel:e.salesChannel}}),this.configLoaded=!0})}}}),n(7646);var ee={namespaced:!0,state(){return{overviewData:[],checksumData:[],logData:[],loading:{overview:!1,checksum:!1,log:!1}}},getters:{isLoading:e=>Object.values(e.loading).some(e=>e),overviewData(e){return e.overviewData},checksumData(e){return e.checksumData},logData(e){return e.logData}},mutations:{setLoading(e,t){let n=t[0],o=t[1];return"boolean"==typeof o&&void 0!==e.loading[n]&&(e.loading[n]=o,!0)},setOverviewData(e,t){e.overviewData=t},setChecksumData(e,t){e.checksumData=t},setLogData(e,t){e.logData=t}}};let{Component:et}=Shopware,{mapGetters:en}=Shopware.Component.getComponentHelper();et.register("lgw-toolbox",{template:"{% block lgw_toolbox %}\n    <sw-page class=\"lgw-toolbox\" :showSearchBar=\"false\">\n        {% block lgw_toolbox_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block lgw_toolbox_smart_bar_header_title %}\n                    <h2>\n                        {% block lgw_toolbox_smart_bar_header_title_text %}\n                            {{ $tc('lengow-connector.page.toolbox') }}\n                            <lgw-debug-warning></lgw-debug-warning>\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n        {% block lgw_toolbox_content %}\n        <template #content>\n            <sw-card-view>\n                {% block lgw_toolbox_content_tabs %}\n                    <sw-tabs v-if=\"!isLoading\">\n                        {% block lgw_toolbox_content_tabs_base %}\n                            <sw-tabs-item :route=\"{ name: 'lengow.connector.toolbox.base' }\"\n                                          :title=\"$tc('lengow-connector.toolbox.menu.overview')\">\n                                {{ $tc('lengow-connector.toolbox.menu.overview') }}\n                            </sw-tabs-item>\n                        {% endblock %}\n                        {% block lgw_toolbox_content_tabs_checksum %}\n                            <sw-tabs-item :route=\"{ name: 'lengow.connector.toolbox.checksum' }\"\n                                          :title=\"$tc('lengow-connector.toolbox.menu.checksum')\">\n                                {{ $tc('lengow-connector.toolbox.menu.checksum') }}\n                            </sw-tabs-item>\n                        {% endblock %}\n                        {% block lgw_toolbox_content_tabs_log %}\n                            <sw-tabs-item :route=\"{ name: 'lengow.connector.toolbox.log' }\"\n                                          :title=\"$tc('lengow-connector.toolbox.menu.log')\">\n                                    {{ $tc('lengow-connector.toolbox.menu.log') }}\n                            </sw-tabs-item>\n                        {% endblock %}\n                    </sw-tabs>\n                {% endblock %}\n                {% block lgw_toolbox_content_view %}\n                    <router-view></router-view>\n                {% endblock %}\n                {% block lgw_toolbox_content_footer %}\n                    <lgw-footer v-if=\"!isLoading\"></lgw-footer>\n                {% endblock %}\n            </sw-card-view>\n        </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n",inject:["LengowConnectorToolboxService"],mixins:[],data(){return{}},beforeCreate(){Shopware.State.registerModule("lgwToolbox",ee)},created(){this.createdComponent()},beforeDestroy(){Shopware.State.unregisterModule("lgwToolbox")},metaInfo(){return{title:this.$createTitle()}},computed:{...en("lgwToolbox",["isLoading"])},methods:{createdComponent(){this.loadOverviewData(),this.loadChecksumData(),this.loadLogData()},loadOverviewData(){Shopware.State.commit("lgwToolbox/setLoading",["overview",!0]),this.LengowConnectorToolboxService.getOverviewData().then(e=>{Shopware.State.commit("lgwToolbox/setOverviewData",e)}).finally(()=>{Shopware.State.commit("lgwToolbox/setLoading",["overview",!1])})},loadChecksumData(){Shopware.State.commit("lgwToolbox/setLoading",["checksum",!0]),this.LengowConnectorToolboxService.getChecksumData().then(e=>{Shopware.State.commit("lgwToolbox/setChecksumData",e)}).finally(()=>{Shopware.State.commit("lgwToolbox/setLoading",["checksum",!1])})},loadLogData(){Shopware.State.commit("lgwToolbox/setLoading",["log",!0]),this.LengowConnectorToolboxService.getLogData().then(e=>{Shopware.State.commit("lgwToolbox/setLogData",e)}).finally(()=>{Shopware.State.commit("lgwToolbox/setLoading",["log",!1])})}}});let{Component:eo,Filter:ei,Data:{Criteria:el}}=Shopware,{mapState:ea}=Shopware.Component.getComponentHelper();eo.register("lgw-connection-catalog",{template:'{% block lgw_connection_catalog %}\n    <sw-card class="lgw-connection-catalog">\n        <div class="lgw-content-section">\n            <div class="lgw-text-center lgw-logo">\n                <img :src="assetFilter(\'lengowconnector/lengow-blue.png\')" alt="lengow">\n            </div>\n        </div>\n        <div v-if="!hasError">\n            {% block lgw_connection_catalog_form %}\n                <div class="lgw-content-section">\n                    <h2 class="lgw-text-center">\n                        {{ $tc(\'lengow-connector.connection.catalog.link_title\') }}\n                    </h2>\n                    <p class="lgw-text-center">\n                        {{ $tc(\'lengow-connector.connection.catalog.link_description\') }}\n                    </p>\n                    <p class="lgw-text-center">\n                        <span v-if="!isLoading">\n                            {{ nbCatalog }}\n                        </span>\n                        {{ $tc(\'lengow-connector.connection.catalog.link_catalog_avalaible\') }}\n                    </p>\n                </div>\n                <div v-if="salesChannelLoaded">\n                    <lgw-catalog-select v-for="salesChannel in salesChannels"\n                                        :salesChannel="salesChannel"\n                                        :onSelectChange="catalogSelectionChanged"\n                                        :onOptionsLoaded="catalogOptionsLoaded"\n                                        :disabled="buttonDisabled || isLoading">\n                    </lgw-catalog-select>\n                </div>\n                <div class="lgw-text-center">\n                    <sw-button class="lgw-btn"\n                               @click="linkCatalogs"\n                               :disabled="buttonDisabled"\n                               :isLoading="isLoading">\n                        {{ $tc(\'lengow-connector.connection.catalog.link_button\') }}\n                    </sw-button>\n                    <br/>\n                </div>\n            {% endblock %}\n        </div>\n        <div v-else>\n            {% block lgw_connection_catalog_failed %}\n                <div class="lgw-content-section">\n                    <h2 class="lgw-text-center">\n                        {{ $tc(\'lengow-connector.connection.catalog.failed_title\') }}\n                    </h2>\n                </div>\n                <div class="lgw-module-illu mod-disconnected">\n                    <img :src="assetFilter(\'lengowconnector/connected-shopware.png\')" class="lgw-module-illu-module" alt="">\n                    <img :src="assetFilter(\'lengowconnector/connected-lengow.png\')" class="lgw-module-illu-module" alt="">\n                    <img :src="assetFilter(\'lengowconnector/unplugged.png\')" class="lgw-module-illu-plug" alt="">\n                </div>\n                <div class="lgw-content-section">\n                    <p class="lgw-text-center">\n                        {{ $tc(\'lengow-connector.connection.catalog.failed_description_first\') }}\n                    </p>\n                    <p class="lgw-text-center">\n                        {{ $tc(\'lengow-connector.connection.catalog.failed_description_second\') }}\n                    </p>\n                    <p class="lgw-text-center">\n                        {{ $tc(\'lengow-connector.connection.cms.failed_help\') }}\n                        <a :href="helpCenterLink" target="_blank">\n                            {{ $tc(\'lengow-connector.connection.cms.failed_help_center\') }}\n                        </a>\n                        {{ $tc(\'lengow-connector.connection.cms.failed_help_or\') }}\n                        <a :href="supportLink" target="_blank">\n                            {{ $tc(\'lengow-connector.connection.cms.failed_help_customer_success_team\') }}\n                        </a>\n                    </p>\n                </div>\n                <div class="lgw-text-center">\n                    <sw-button class="lgw-btn" @click="retryMatching">\n                        {{ $tc(\'lengow-connector.connection.cms.failed_button\') }}\n                    </sw-button>\n                    <sw-button class="lgw-btn" @click="redirectToDashboard">\n                        {{ $tc(\'lengow-connector.connection.cms.success_button\') }}\n                    </sw-button>\n                    <br/>\n                </div>\n            {% endblock %}\n        </div>\n    </sw-card>\n{% endblock %}\n',inject:["repositoryFactory","LengowConnectorConnectionService","LengowConnectorSyncService"],data(){return{isLoading:!1,buttonDisabled:!0,salesChannels:[],salesChannelLoaded:!1,nbCatalog:0,hasError:!1,helpCenterLink:"",supportLink:""}},computed:{...ea("lgwConnection",["catalogList","catalogSelected","optionIsLoading"]),assetFilter(){return ei.getByName("asset")},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")}},created(){this.assetFilter(),this.createdComponent()},methods:{createdComponent(){this.isLoading=!0,this.nbCatalog=this.catalogList.length,this.buttonDisabled=0===this.nbCatalog,this.LengowConnectorSyncService.getPluginLinks().then(e=>{e.success&&(this.helpCenterLink=e.links.help_center,this.supportLink=e.links.support)});let e=new el;e.addAssociation("domains"),this.salesChannelRepository.search(e,Shopware.Context.api).then(e=>{this.salesChannels=e,this.initCatalogSelected()}).finally(()=>{this.salesChannelLoaded=!0,this.isLoading=!1})},initCatalogSelected(){let e=[];this.salesChannels.forEach(t=>{e[t.id]=[]}),Shopware.State.commit("lgwConnection/setCatalogSelected",e)},catalogSelectionChanged(e,t){let n=this.catalogSelected;n[e]=t,Shopware.State.commit("lgwConnection/setCatalogSelected",n),this.salesChannels.forEach(e=>{Shopware.State.commit("lgwConnection/setOptionIsLoading",[e.id,!0])}),Shopware.State.commit("lgwConnection/setCatalogSelectionChanged",!0)},catalogOptionsLoaded(){this.optionIsLoading||Shopware.State.commit("lgwConnection/setCatalogSelectionChanged",!1)},linkCatalogs(){this.isLoading=!0;let e=[];Object.keys(this.catalogSelected).forEach(t=>{this.catalogSelected[t].forEach(n=>{e.push({salesChannelId:t,catalogId:n})})}),this.LengowConnectorConnectionService.saveCatalogsLinked({catalogSelected:e}).then(e=>{e.success?this.redirectToDashboard():(this.isLoading=!1,this.hasError=!0)})},redirectToDashboard(){this.$router.push({name:"lengow.connector.dashboard"})},retryMatching(){this.isLoading=!0,this.initCatalogSelected(),this.hasError=!1,this.isLoading=!1}}}),n(6416);let{Component:er,Filter:es,Data:{Criteria:ec}}=Shopware,{mapState:ed}=Shopware.Component.getComponentHelper();er.register("lgw-connection-cms",{template:'{% block lgw_connection_cms %}\n    <sw-card class="lgw-connection-cms">\n        <div class="lgw-content-section">\n            <div class="lgw-text-center lgw-logo">\n                <img :src="assetFilter(\'lengowconnector/lengow-blue.png\')" alt="lengow">\n            </div>\n        </div>\n        <div v-if="showCredentialForm">\n            {% block lgw_connection_cms_credential_form %}\n                <div class="lgw-content-section">\n                    <h2 class="lgw-text-center">\n                        {{ $tc(\'lengow-connector.connection.cms.credentials_title\') }}\n                    </h2>\n                </div>\n                <div class="lgw-content-input">\n                    <sw-text-field\n                                    @update:value="handleChangeCredentials(\'accessToken\', $event)"\n                                    @change="handleChangeCredentials(\'accessToken\', $event)"\n                                   :value="accessToken"\n                                   :disabled="isLoading"\n                                   :placeholder="$tc(\'lengow-connector.connection.cms.credentials_placeholder_access_token\')">\n                    </sw-text-field>\n                    <sw-text-field\n                                    @update:value="handleChangeCredentials(\'secret\', $event)"\n                                    @change="handleChangeCredentials(\'secret\', $event)"\n                                   :value="secret"\n                                   :disabled="isLoading"\n                                   :placeholder="$tc(\'lengow-connector.connection.cms.credentials_placeholder_secret\')">\n                    </sw-text-field>\n                </div>\n                <div class="lgw-content-section">\n                    <p class="lgw-text-center">\n                        {{ $tc(\'lengow-connector.connection.cms.credentials_description\') }}\n                    </p>\n                    <p class="lgw-text-center">\n                        {{ $tc(\'lengow-connector.connection.cms.credentials_help\') }}\n                        <a :href="helpCenterLink" target="_blank">\n                            {{ $tc(\'lengow-connector.connection.cms.credentials_help_center\') }}\n                        </a>\n                    </p>\n                </div>\n                <div class="lgw-text-center">\n                    <sw-button class="lgw-btn"\n                               @click="connectCms"\n                               :disabled="connectionButtonDisabled"\n                               :isLoading="isLoading">\n                        {{ $tc(\'lengow-connector.connection.cms.credentials_button\') }}\n                    </sw-button>\n                </div>\n            {% endblock %}\n        </div>\n        <div v-else>\n            <div v-if="cmsConnected">\n                {% block lgw_connection_cms_success %}\n                    <div class="lgw-content-section">\n                        <h2 class="lgw-text-center">\n                            {{ $tc(\'lengow-connector.connection.cms.success_title\') }}\n                        </h2>\n                    </div>\n                    <div class="lgw-module-illu mod-connected">\n                        <img :src="assetFilter(\'lengowconnector/connected-shopware.png\')" class="lgw-module-illu-module" alt="">\n                        <img :src="assetFilter(\'lengowconnector/connected-lengow.png\')" class="lgw-module-illu-lengow" alt="">\n                        <img :src="assetFilter(\'lengowconnector/connection-module.png\')" class="lgw-module-illu-plug" alt="">\n                    </div>\n                    <template v-if="hasCatalogToLink">\n                        {% block lgw_connection_cms_success_catalog %}\n                            <div class="lgw-content-section">\n                                <p class="lgw-text-center">\n                                    {{ $tc(\'lengow-connector.connection.cms.success_description_first_catalog\') }}\n                                </p>\n                                <p class="lgw-text-center">\n                                    {{ $tc(\'lengow-connector.connection.cms.success_description_second_catalog\') }}\n                                </p>\n                            </div>\n                            <div class="lgw-text-center">\n                                <routerLink class="lgw-btn" :to="{ name: \'lengow.connector.connection.catalog\' }">\n                                    {{ $tc(\'lengow-connector.connection.cms.success_button_catalog\') }}\n                                </routerLink>\n                            </div>\n                        {% endblock %}\n                    </template>\n                    <template v-else>\n                        {% block lgw_connection_cms_success_no_catalog %}\n                            <div class="lgw-content-section">\n                                <p class="lgw-text-center">\n                                    {{ $tc(\'lengow-connector.connection.cms.success_description_first\') }}\n                                </p>\n                                <p class="lgw-text-center">\n                                    {{ $tc(\'lengow-connector.connection.cms.success_description_second\') }}\n                                    <a :href="lengowUrl" target="_blank">\n                                        {{ $tc(\'lengow-connector.connection.cms.success_description_second_go_to_lengow\') }}\n                                    </a>\n                                </p>\n                            </div>\n                            <div class="lgw-text-center">\n                                <routerLink class="lgw-btn" :to="{ name: \'lengow.connector.dashboard\' }">\n                                    {{ $tc(\'lengow-connector.connection.cms.success_button\') }}\n                                </routerLink>\n                            </div>\n                        {% endblock %}\n                    </template>\n                {% endblock %}\n            </div>\n            <div v-else>\n                {% block lgw_connection_cms_failed %}\n                    <div class="lgw-content-section">\n                        <h2 class="lgw-text-center">\n                            {{ $tc(\'lengow-connector.connection.cms.failed_title\') }}\n                        </h2>\n                    </div>\n                    <div class="lgw-module-illu mod-disconnected">\n                        <img :src="assetFilter(\'lengowconnector/connected-shopware.png\')" class="lgw-module-illu-module" alt="">\n                        <img :src="assetFilter(\'lengowconnector/connected-lengow.png\')" class="lgw-module-illu-lengow" alt="">\n                        <img :src="assetFilter(\'lengowconnector/unplugged.png\')" class="lgw-module-illu-plug" alt="">\n                    </div>\n                    <div class="lgw-content-section">\n                        <template v-if="credentialsValid">\n                            {% block lgw_connection_cms_failed_cms_not_connected %}\n                                <p class="lgw-text-center">\n                                    {{ $tc(\'lengow-connector.connection.cms.failed_description\') }}\n                                </p>\n                            {% endblock %}\n                        </template>\n                        <template v-else>\n                            {% block lgw_connection_cms_failed_crendentials_not_valid %}\n                                <p class="lgw-text-center">\n                                    {{ $tc(\'lengow-connector.connection.cms.failed_description_first_credentials\') }}\n                                </p>\n                                <p v-if="preprod" class="lgw-text-center">\n                                    {{ $tc(\'lengow-connector.connection.cms.failed_description_second_credentials_preprod\') }}\n                                </p>\n                                <p v-else class="lgw-text-center">\n                                    {{ $tc(\'lengow-connector.connection.cms.failed_description_second_credentials_prod\') }}\n                                </p>\n                            {% endblock %}\n                        </template>\n                        <p class="lgw-text-center">\n                            {{ $tc(\'lengow-connector.connection.cms.failed_help\') }}\n                            <a :href="helpCenterLink" target="_blank">\n                                {{ $tc(\'lengow-connector.connection.cms.failed_help_center\') }}\n                            </a>\n                            {{ $tc(\'lengow-connector.connection.cms.failed_help_or\') }}\n                            <a :href="supportLink" target="_blank">\n                                {{ $tc(\'lengow-connector.connection.cms.failed_help_customer_success_team\') }}\n                            </a>\n                        </p>\n                    </div>\n                    <div class="lgw-text-center">\n                        <sw-button class="lgw-btn"\n                                   @click="retryConnection"\n                                   :isLoading="isLoading">\n                            {{ $tc(\'lengow-connector.connection.cms.failed_button\') }}\n                        </sw-button>\n                    </div>\n                {% endblock %}\n            </div>\n        </div>\n    </sw-card>\n{% endblock %}\n',inject:["LengowConnectorConnectionService","LengowConnectorSyncService","repositoryFactory"],data(){return{isLoading:!1,lengowUrl:e,preprod:!1,connectionButtonDisabled:!0,showCredentialForm:!0,credentialsValid:!1,cmsConnected:!1,hasCatalogToLink:!1,accessToken:"",secret:"",helpCenterLink:"",supportLink:""}},computed:{assetFilter(){return es.getByName("asset")},...ed("lgwConnection",["catalogList"]),lengowConfigRepository(){return this.repositoryFactory.create("lengow_settings")}},created(){this.assetFilter(),this.loadEnvironmentUrl()},methods:{createdComponent(){this.isLoading=!0,this.lengowUrl===e&&(this.preprod=!0),this.LengowConnectorSyncService.getPluginLinks().then(e=>{e.success&&(this.helpCenterLink=e.links.help_center,this.supportLink=e.links.support)}),this.isLoading=!1},loadEnvironmentUrl(){let e=new ec;e.addFilter(ec.equals("name","lengowEnvironmentUrl")),this.lengowConfigRepository.search(e,Shopware.Context.api).then(e=>{e.total>0&&(this.lengowUrl=t+e[0].value,this.createdComponent())})},connectCms(){this.isLoading=!0;let e=this.accessToken,t=this.secret;this.LengowConnectorConnectionService.checkApiCredentials({accessToken:e,secret:t}).then(e=>{this.credentialsValid=e.success,this.credentialsValid?this.LengowConnectorConnectionService.connectCms().then(e=>{this.cmsConnected=e.success,this.cmsConnected?this.LengowConnectorConnectionService.getCatalogList().then(e=>{Shopware.State.commit("lgwConnection/setCatalogList",e)}).finally(()=>{this.hasCatalogToLink=this.catalogList.length>0,this.showCredentialForm=!1,this.isLoading=!1}):(this.showCredentialForm=!1,this.isLoading=!1)}):(this.showCredentialForm=!1,this.isLoading=!1)})},handleChangeCredentials(e,t){"accessToken"===e?this.accessToken=t:"secret"===e&&(this.secret=t),this.connectionButtonDisabled=!(""!==this.accessToken&&""!==this.secret)},retryConnection(){this.isLoading=!0,this.accessToken="",this.secret="",this.cmsConnected=!1,this.connectionButtonDisabled=!0,this.credentialsValid=!1,this.showCredentialForm=!0,this.isLoading=!1}}});let{Component:eg,Filter:ep,Data:{Criteria:eh}}=Shopware;eg.register("lgw-connection-home",{template:'{% block lgw_connection_home %}\n    <sw-card class="lgw-connection-home">\n        <div class="lgw-content-section">\n            <div class="lgw-text-center lgw-logo">\n                <img :src="assetFilter(\'lengowconnector/lengow-blue.png\')" alt="lengow">\n            </div>\n            <p class="lgw-text-center">\n                {{ $tc(\'lengow-connector.connection.home.description_first\') }}\n            </p>\n            <p class="lgw-text-center">\n                {{ $tc(\'lengow-connector.connection.home.description_second\') }}\n            </p>\n            <p class="lgw-text-center">\n                {{ $tc(\'lengow-connector.connection.home.description_third\') }}\n            </p>\n        </div>\n        <div class="lgw-module-illu">\n            <img :src="assetFilter(\'lengowconnector/connected-shopware.png\')" class="lgw-module-illu-module" alt="">\n            <img :src="assetFilter(\'lengowconnector/connected-lengow.png\')" class="lgw-module-illu-lengow" alt="">\n            <img :src="assetFilter(\'lengowconnector/plug-grey.png\')" class="lgw-module-illu-plug" alt="">\n        </div>\n        <p class="lgw-text-center">\n            {{ $tc(\'lengow-connector.connection.home.description_fourth\') }}\n        </p>\n        <div class="lgw-text-center">\n            <routerLink class="lgw-btn" :to="{ name: \'lengow.connector.connection.cms\' }">\n                {{ $tc(\'lengow-connector.connection.home.button\') }}\n            </routerLink>\n            <br/>\n            <p>\n                {{ $tc(\'lengow-connector.connection.home.no_account\') }}\n                <a :href="lengowUrl" target="_blank">\n                    {{ $tc(\'lengow-connector.connection.home.no_account_sign_up\') }}\n                </a>\n            </p>\n        </div>\n    </sw-card>\n{% endblock %}\n',inject:["repositoryFactory"],data(){return{isLoading:!1,lengowUrl:e}},computed:{assetFilter(){return ep.getByName("asset")},lengowConfigRepository(){return this.repositoryFactory.create("lengow_settings")}},created(){this.assetFilter(),this.loadEnvironmentUrl()},methods:{loadEnvironmentUrl(){let e=new eh;e.addFilter(eh.equals("name","lengowEnvironmentUrl")),this.lengowConfigRepository.search(e,Shopware.Context.api).then(e=>{e.total>0&&(this.lengowUrl=t+e[0].value)})}}}),n(9781);let{Component:ew,Filter:eu,Data:{Criteria:em}}=Shopware;ew.register("lgw-dashboard-free-trial",{template:'{% block lgw_dashboard_free_trial %}\n    <template>\n        <div class="lgw-dashboard-free-trial">\n            <div class="expired-text-block lgw-col-6 text-center">\n                    <h2>{{ $tc(\'lengow-connector.global.title_end_free_trial\') }}</h2>\n                    <h3>{{ $tc(\'lengow-connector.global.subtitle_end_free_trial\') }}</h3>\n                    <p>{{ $tc(\'lengow-connector.global.first_description_end_free_trial\') }}</p>\n                    <p>{{ $tc(\'lengow-connector.global.second_description_end_free_trial\') }}</p>\n                    <p>{{ $tc(\'lengow-connector.global.third_description_end_free_trial\') }}</p>\n                    <sw-button :disabled="false"\n                               :square="false"\n                               :block="false"\n                               :isLoading="false"\n                               size="small"\n                               class="lgw-btn lgw-free-trial-button"\n                               target="_blank"\n                               :link="lengow_url">\n                        {{ $tc(\'lengow-connector.global.upgrade_account_button\') }}\n                    </sw-button>\n                    <sw-button :disabled="false"\n                               :square="false"\n                               :block="false"\n                               :isLoading="false"\n                               size="small"\n                               class="lgw-btn lgw-free-trial-button"\n                               target="_blank"\n                               @click="reloadAccountStatus">\n                        {{ $tc(\'lengow-connector.global.refresh_action\') }}\n                    </sw-button>\n            </div>\n            <div class="lgw-col-6">\n                <div class="vertical-center">\n                    <img :src="assetFilter(\'lengowconnector/lengow-blue.png\')" alt="lengow" class="center-block">\n                </div>\n            </div>\n        </div>\n    </template>\n{% endblock %}\n',inject:["LengowConnectorSyncService","repositoryFactory"],data(){return{lengowUrl:e}},computed:{assetFilter(){return eu.getByName("asset")},lengowConfigRepository(){return this.repositoryFactory.create("lengow_settings")}},created(){this.assetFilter(),this.loadEnvironmentUrl()},methods:{reloadAccountStatus(){this.LengowConnectorSyncService.getAccountStatus(!0).then(e=>{e.success&&window.location.reload()})},loadEnvironmentUrl(){let e=new em;e.addFilter(em.equals("name","lengowEnvironmentUrl")),this.lengowConfigRepository.search(e,Shopware.Context.api).then(e=>{e.total>0&&(this.lengowUrl=t+e[0].value,this.createdComponent())})}}}),n(6136);let{Component:eb,Filter:e_,Data:{Criteria:ev}}=Shopware;eb.register("lgw-dashboard-home",{template:'{% block lgw_dashboard_home %}\n    <template>\n        <div class="lgw-dashboard-home">\n            <div class="lgw-container">\n                <div class="lgw-row">\n                    <div class="lgw-box lgw-dashboard-home-header text-center">\n                        <img :src="assetFilter(\'lengowconnector/lengow-white-big.png\')" alt="lengow" class="img-responsive">\n                        <h1>{{ $tc(\'lengow-connector.dashboard.banner.title\') }}</h1>\n                        <sw-button :disabled="false"\n                                   :square="false"\n                                   :block="false"\n                                   :isLoading="false"\n                                   class="lgw-btn"\n                                   target="_blank"\n                                   :link="lengowEnvironmentUrl">\n                            {{ $tc(\'lengow-connector.dashboard.banner.button\') }}\n                        </sw-button>\n                    </div>\n                </div>\n                <div class="lgw-row lgw-home-menu text-center">\n                    <div class="lgw-col-4 lgw-box-link lgw-left-block">\n                        <routerLink :to="{ name: \'lengow.connector.product\' }" tag=\'span\'>\n                            <div class="lgw-box">\n                                <img :src="assetFilter(\'lengowconnector/home-products.png\')" class="img-responsive">\n                                <h2>{{ $tc(\'lengow-connector.dashboard.products.title\') }}</h2>\n                                <p>{{ $tc(\'lengow-connector.dashboard.products.desc\') }}</p>\n                            </div>\n                        </routerLink>\n                    </div>\n                    <div class="lgw-col-4 lgw-box-link">\n                        <routerLink :to="{ name: \'lengow.connector.order\' }" tag=\'span\'>\n                            <div class="lgw-box">\n                                <img :src="assetFilter(\'lengowconnector/home-orders.png\')" class="img-responsive">\n                                <h2>{{ $tc(\'lengow-connector.dashboard.orders.title\') }}</h2>\n                                <p>{{ $tc(\'lengow-connector.dashboard.orders.desc\') }}</p>\n                            </div>\n                        </routerLink>\n                    </div>\n                    <div class="lgw-col-4 lgw-box-link lgw-right-block">\n                        <routerLink :to="{ name: \'lengow.connector.setting\' }" tag=\'span\'>\n                            <div class="lgw-box">\n                                <img :src="assetFilter(\'lengowconnector/home-settings.png\')" class="img-responsive">\n                                <h2>{{ $tc(\'lengow-connector.dashboard.settings.title\') }}</h2>\n                                <p>{{ $tc(\'lengow-connector.dashboard.settings.desc\') }}</p>\n                            </div>\n                        </routerLink>\n                    </div>\n                </div>\n                <div class="lgw-row">\n                    <div class="lgw-box">\n                        <h2>{{ $tc(\'lengow-connector.dashboard.help.title\') }}</h2>\n                        <p>\n                            <routerLink class="lgw-router-link" :to="{ name: \'lengow.connector.contact\' }">\n                                {{ $tc(\'lengow-connector.dashboard.help.contact\') }}\n                            </routerLink>\n                        </p>\n                        <br/>\n                        <p>\n                            <a :href="helpCenterLink" target="_blank">\n                                {{ $tc(\'lengow-connector.dashboard.help.help_center_link\') }}\n                            </a>\n                            {{ $tc(\'lengow-connector.dashboard.help.help_center\') }}\n                        </p>\n                    </div>\n                </div>\n                <lgw-footer>\n                </lgw-footer>\n            </div>\n        </div>\n    </template>\n{% endblock %}\n',inject:["repositoryFactory","LengowConnectorSyncService"],data(){return{lengowEnvironmentUrl:e,helpCenterLink:""}},computed:{assetFilter(){return e_.getByName("asset")},lengowConfigRepository(){return this.repositoryFactory.create("lengow_settings")}},created(){this.assetFilter(),this.createdComponent(),this.loadEnvironmentUrl()},methods:{createdComponent(){this.LengowConnectorSyncService.getPluginLinks().then(e=>{e.success&&(this.helpCenterLink=e.links.help_center)})},loadEnvironmentUrl(){let e=new ev;e.addFilter(ev.equals("name","lengowEnvironmentUrl")),this.lengowConfigRepository.search(e,Shopware.Context.api).then(e=>{e.total>0&&(this.lengowEnvironmentUrl=t+e[0].value)})}}}),n(4901);let{Data:{Criteria:ef}}=Shopware;Shopware.Component.register("lgw-order-detail-extension",{template:'<div v-if="!isLoading">\n    <sw-card class="lgw-order-detail-extension" title="">\n        <template v-if="isFromLengow">\n            <div class="lgw-order-detail-button-row">\n                <sw-button :disabled="debugMode"\n                           :square="false"\n                           :block="false"\n                           :isLoading="btnSynchroLoading"\n                           target="_blank"\n                           size="small"\n                           class="lgw-order-detail-button"\n                           @click="reSynchronizeOrder">\n                    {{ $tc(\'lengow-connector.order_tab.synchronize_id\') }}\n                </sw-button>\n                <sw-button :disabled="debugMode"\n                           :square="false"\n                           :block="false"\n                           :isLoading="btnReimportLoading"\n                           target="_blank"\n                           size="small"\n                           class="lgw-order-detail-button"\n                           @click="toggleModal">\n                    {{ $tc(\'lengow-connector.order_tab.cancel_and_reimport\') }}\n                </sw-button>\n                <sw-button v-if="btnActionDisplay"\n                           :disabled="debugMode"\n                           :square="false"\n                           :block="false"\n                           size="small"\n                           :isLoading="false"\n                           target="_blank"\n                           class="lgw-order-detail-button"\n                           @click="reSendAction">\n                    {{ $tc(\'lengow-connector.order_tab.resend_action\') }}\n                </sw-button>\n                <sw-modal v-show="modalDisplay"\n                          :title="$tc(\'lengow-connector.order_tab.cancel_and_reimport\')"\n                          :closable="false"\n                          :isLoading="modalLoading">\n                    {{ $tc(\'lengow-connector.order_tab.check_cancel_and_reimport\') }}\n                    <template slot="modal-footer">\n                        <sw-button\n                                   :square="false"\n                                   :block="false"\n                                   size="small"\n                                   :isLoading="false"\n                                   target="_blank"\n                                   variant="primary"\n                                   @click="reImportOrder">\n                            {{ $tc(\'lengow-connector.order_tab.status_yes\') }}\n                        </sw-button>\n                        <sw-button\n                            :square="false"\n                            :block="false"\n                            size="small"\n                            :isLoading="false"\n                            target="_blank"\n                            @click="toggleModal">\n                            {{ $tc(\'lengow-connector.order_tab.status_no\') }}\n                        </sw-button>\n                    </template>\n                </sw-modal>\n            </div>\n            <sw-container slot="grid" type="row">\n                <sw-card-section>\n                    <sw-container columns="repeat(auto-fit, minmax(250px, 1fr))" gap="30px 30px">\n                        <sw-description-list columns="1fr" grid="1fr">\n                            <dt>{{ $tc(\'lengow-connector.order_tab.order_id\') }}</dt>\n                            <dd>{{ marketplaceSku }}</dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.marketplace\') }}</dt>\n                            <dd>{{ marketplaceName }}</dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.delivery_address_id\') }}</dt>\n                            <dd>{{ deliveryAddressId }}</dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.order_status\') }}</dt>\n                            <dd>{{ orderLengowState }}</dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.total_paid\') }}</dt>\n                            <dd>{{ totalPaid }}</dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.commission\') }}</dt>\n                            <dd>{{ commission }}</dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.currency\') }}</dt>\n                            <dd>{{ currency }}</dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.customer_name\') }}</dt>\n                            <dd>{{ customerName }}</dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.customer_email\') }}</dt>\n                            <dd>{{ customerEmail }}</dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.carrier\') }}</dt>\n                            <dd>{{ carrier }}</dd>\n                        </sw-description-list>\n                        <sw-description-list columns="1fr" grid="1fr">\n                            <dt>{{ $tc(\'lengow-connector.order_tab.carrier_method\') }}</dt>\n                            <dd>{{ carrierMethod }}</dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.carrier_tracking\') }}</dt>\n                            <dd>{{ carrierTracking }}</dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.carrier_id_relay\') }}</dt>\n                            <dd>{{ carrierIdRelay }}</dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.is_express\') }}</dt>\n                            <dd>\n                                <span v-if="isExpress">{{ $tc(\'lengow-connector.order_tab.status_yes\') }}</span>\n                                <span v-else>{{ $tc(\'lengow-connector.order_tab.status_no\') }}</span>\n                            </dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.is_delivered_by_marketplace\') }}</dt>\n                            <dd>\n                                <span v-if="isShippedByMarketplace">{{ $tc(\'lengow-connector.order_tab.status_yes\') }}</span>\n                                <span v-else>{{ $tc(\'lengow-connector.order_tab.status_no\') }}</span>\n                            </dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.is_business\') }}</dt>\n                            <dd>\n                                <span v-if="isB2b">{{ $tc(\'lengow-connector.order_tab.status_yes\') }}</span>\n                                <span v-else>{{ $tc(\'lengow-connector.order_tab.status_no\') }}</span>\n                            </dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.vat_number\') }}</dt>\n                            <dd>{{ customerVatNumber }}</dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.order_date\') }}</dt>\n                            <dd>{{ orderDate }}</dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.import_date\') }}</dt>\n                            <dd>{{ importedAt }}</dd>\n\n                            <dt>{{ $tc(\'lengow-connector.order_tab.message\') }}</dt>\n                            <dd>{{ message }}</dd>\n                        </sw-description-list>\n                    </sw-container>\n                </sw-card-section>\n                <sw-card-section divider="top" secondary slim>\n                    <sw-description-list columns="1fr" grid="1fr">\n                        <dt>{{ $tc(\'lengow-connector.order_tab.extra\') }}</dt>\n                        <dd>\n                            <textarea class="lgw-text-wrapper" rows="10">{{ extra }}</textarea>\n                        </dd>\n                    </sw-description-list>\n                </sw-card-section>\n            </sw-container>\n        </template>\n        <template v-else>\n            <sw-container>\n                <h6 class="lgw-not-lgw-order">{{ $tc(\'lengow-connector.order_tab.not_lengow_order\') }}</h6>\n            </sw-container>\n        </template>\n    </sw-card>\n</div>\n<div v-else>\n    <sw-loader v-show="isLoading" size="20px"></sw-loader>\n</div>\n',inject:["repositoryFactory","LengowConnectorOrderService"],metaInfo(){return{title:"Custom"}},data(){return{isLoading:!0,btnSynchroLoading:!0,btnActionDisplay:!1,btnActionLoading:!1,btnReimportLoading:!0,modalDisplay:!1,modalLoading:!1,debugMode:!0,isFromLengow:!1,orderId:"",lengowOrder:null,lengowOrderId:"",marketplaceSku:"",marketplaceName:"",deliveryAddressId:"",orderLengowState:"",orderProcessState:"",totalPaid:"",commission:"",currency:"",customerName:"",customerEmail:"",carrier:"",carrierMethod:"",carrierTracking:"",carrierIdRelay:"",isExpress:!1,isShippedByMarketplace:!1,isB2b:!1,customerVatNumber:"",orderDate:"",importedAt:"",message:"",extra:""}},computed:{lengowOrderRepository(){return this.repositoryFactory.create("lengow_order")},orderRepository(){return this.repositoryFactory.create("order")},lengowConfigRepository(){return this.repositoryFactory.create("lengow_settings")},lengowActionRepository(){return this.repositoryFactory.create("lengow_action")}},created(){this.loadOrderData().then(()=>{this.isLoading=!1,this.loadDebugMode(),this.loadSyncData()})},methods:{loadOrderData(){this.orderId=this.$route.params.id;let e=new ef;return e.addFilter(ef.equals("orderId",this.orderId)),this.lengowOrderRepository.search(e,Shopware.Context.api).then(e=>{if(e.total>0){let t=e.first();this.isFromLengow=!0,this.lengowOrderId=t.id,this.marketplaceSku=t.marketplaceSku||"-",this.marketplaceName=t.marketplaceName||"-",this.deliveryAddressId=t.deliveryAddressId||"-",this.orderLengowState=t.orderLengowState||"-",this.orderProcessState=t.orderProcessState||"",this.totalPaid=t.totalPaid||"-",this.commission=t.commission||"-",this.currency=t.currency||"-",this.customerName=t.customerName||"-",this.customerEmail=t.customerEmail||"-",this.carrier=t.carrier||"-",this.carrierMethod=t.carrierMethod||"-",this.carrierTracking=t.carrierTracking||"-",this.carrierIdRelay=t.carrierIdRelay||"-",this.customerVatNumber=t.customerVatNumber||"-",this.orderDate=null!=t.orderDate?new Date(t.orderDate).toLocaleString():"-",this.importedAt=null!=t.importedAt?new Date(t.importedAt).toLocaleString():"-",this.message=t.message||"-",this.extra=null!=t.extra?JSON.stringify(t.extra):"-",null!=t.orderTypes&&(void 0!==t.orderTypes.is_business&&(this.isB2b=!0),void 0!==t.orderTypes.is_express&&(this.isExpress=!0),void 0!==t.orderTypes.delivered_by_marketplace&&(this.isShippedByMarketplace=!0))}})},loadSyncData(){let e=new ef;e.addFilter(ef.equals("state",s.new)),e.addFilter(ef.equals("orderId",this.orderId)),this.lengowActionRepository.search(e,Shopware.Context.api).then(e=>{e.total>0&&this.canResendAction()})},loadDebugMode(){let e=new ef;e.addFilter(ef.equals("name","lengowDebugEnabled")),this.lengowConfigRepository.search(e,Shopware.Context.api).then(e=>{e.total>0&&(this.debugMode="1"===e.first().value),this.btnSynchroLoading=!1,this.btnReimportLoading=!1})},canResendAction(){let e=new ef;return e.addAssociation("deliveries"),e.setIds([this.orderId]),this.orderRepository.search(e,Shopware.Context.api).then(e=>{if(!(e.total>0))return;let t=e.first(),n=this.getOrderDeliveryState(t),o="";t.stateMachineState&&t.stateMachineState.technicalName&&(o=e.first().stateMachineState.technicalName),("shipped"===n||o===g.canceled)&&this.lengowOrderId&&this.orderProcessState!==d.finish&&(this.btnActionDisplay=!0)})},getOrderDeliveryState(e){let t="";if(e.deliveries.length>0){let n=e.deliveries.first();n.stateMachineState.technicalName&&(t=n.stateMachineState.technicalName)}return t},toggleModal(){this.modalDisplay?this.modalDisplay=!1:this.modalDisplay=!0},reSynchronizeOrder(){this.btnSynchroLoading=!0,this.LengowConnectorOrderService.reSynchroniseOrder({orderId:this.orderId}).then(()=>{this.btnSynchroLoading=!1})},reImportOrder(){this.btnReimportLoading=!0,this.modalLoading=!0,this.LengowConnectorOrderService.reImportFailedOrder({lengowOrderId:this.lengowOrderId,orderId:this.orderId}).then(e=>{this.toggleModal(),e.success&&(this.modalLoading=!1,this.orderId=e.new_order_id)}).finally(()=>{this.btnReimportLoading=!1,this.modalLoading=!1,this.$router.push({name:"sw.order.detail",params:{id:this.orderId}}),!0===this.modalDisplay&&this.toggleModal()})},reSendAction(){this.btnActionLoading=!0,this.LengowConnectorOrderService.reSendAction({lengowOrderId:this.lengowOrderId}).then(()=>{this.btnActionLoading=!1})}}}),n(4408);let{Component:ek,Data:{Criteria:eS}}=Shopware;ek.register("lgw-setting-export",{template:'{% block lgw_setting_export %}\n    <sw-card-view class="lgw-setting-export">\n        {% block lgw_setting_export_selection %}\n            <sw-card :title="$tc(\'lengow-connector.setting.title.exclusions\')">\n                <template v-if="render">\n                    <sw-help-text class="lgw-help-text"\n                                  :text="$tc(\'lengow-connector.setting.lengow_export_setting.disabled_products.description\')"\n                                  :width="200"\n                                  tooltipPosition="right"/>\n                    <h4>{{ $tc(\'lengow-connector.setting.lengow_export_setting.disabled_products.label\') }}</h4>\n                    <template v-for="salesChannel in salesChannels">\n                        <sw-switch-field class="text-center"\n                                         :label="salesChannel.name"\n                                         v-model="salesChannel.exportDisabled"\n                                        @update:value="onSaveSettings($event, \'lengowExportDisabledProduct\', salesChannel.salesChannelId)"\n                                        @change="onSaveSettings($event, \'lengowExportDisabledProduct\', salesChannel.salesChannelId)"\n                        >\n                        </sw-switch-field>\n                    </template>\n                    <sw-help-text class="lgw-help-text"\n                                  :text="$tc(\'lengow-connector.setting.lengow_export_setting.lengow_selection.description\')"\n                                  :width="200"\n                                  tooltipPosition="right"/>\n                    <h4>{{ $tc(\'lengow-connector.setting.lengow_export_setting.lengow_selection.label\') }}</h4>\n                    <template v-for="salesChannel in salesChannels">\n                        <sw-switch-field class="text-center"\n                                         :label="salesChannel.name"\n                                         v-model="salesChannel.exportSelection"\n                                        @update:value="onSaveSettings($event, \'lengowSelectionEnabled\', salesChannel.salesChannelId)"\n                                        @change="onSaveSettings($event, \'lengowSelectionEnabled\', salesChannel.salesChannelId)"\n                        >\n                        </sw-switch-field>\n                    </template>\n                </template>\n                <template v-else>\n                    <sw-loader></sw-loader>\n                </template>\n            </sw-card>\n        {% endblock %}\n        {% block lgw_setting_export_shipping %}\n            <sw-card :title="$tc(\'lengow-connector.setting.lengow_export_setting.shipping.label\')">\n                <template v-if="render">\n                    <sw-help-text class="lgw-help-text"\n                                  :text="$tc(\'lengow-connector.setting.lengow_export_setting.shipping.description\')"\n                                  :width="200"\n                                  tooltipPosition="right"/>\n                    <sw-select-field v-for="salesChannel in salesChannels"\n                                     :label="salesChannel.name"\n                                     v-model="salesChannel.defaultShippingMethod"\n                                    @update:value="onSaveSettings($event, \'lengowExportDefaultShippingMethod\', salesChannel.salesChannelId)"\n                                    @change="onSaveSettings($event, \'lengowExportDefaultShippingMethod\', salesChannel.salesChannelId)"\n                    >\n                        <template v-for="shippingMethod in shippingMethods">\n                            <option v-if="salesChannel.salesChannelId === shippingMethod.salesChannelId"\n                                    :value="shippingMethod.value">\n                                {{ shippingMethod.name }}\n                            </option>\n                        </template>\n                    </sw-select-field>\n                </template>\n                <template v-else>\n                    <sw-loader></sw-loader>\n                </template>\n            </sw-card>\n        {% endblock %}\n        {% block lgw_setting_export_footer %}\n            <lgw-footer></lgw-footer>\n        {% endblock %}\n    </sw-card-view>\n{% endblock %}\n',inject:["repositoryFactory"],props:{config:{type:Object,required:!0,default:{}},onSaveSettings:{type:Object,required:!0}},data(){return{salesChannels:[],shippingMethods:[],render:!1}},async created(){let e=new eS;e.addAssociation("domains"),this.salesChannelRepository.search(e,Shopware.Context.api).then(e=>{e.forEach(e=>{this.getShippingMethod(e).then(()=>{this.getConfigExportDefaultShippingMethod(e.id).then(t=>{this.salesChannels=[...this.salesChannels,{salesChannelId:e.id,name:e.name,value:e.id,defaultShippingMethod:t,exportDisabled:this.getConfigExportDisabledProduct(e.id),exportSelection:this.getConfigExportSelection(e.id)}],this.render=!0})})})})},computed:{salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},shippingMethodRepository(){return this.repositoryFactory.create("shipping_method")},salesChannelShippingMethodRepository(){return this.repositoryFactory.create("sales_channel_shipping_method")}},methods:{getConfigExportDefaultShippingMethod(e){let t="";if(this.config.lengowExportDefaultShippingMethod.forEach(n=>{n.salesChannel.id===e&&(t=n.value)}),""===t)return"Not found";let n=new eS;return n.addFilter(eS.equals("id",t)),this.shippingMethodRepository.search(n,Shopware.Context.api).then(e=>0!==e.total?e.first().id:"Not found")},getConfigExportDisabledProduct(e){return this.config.lengowExportDisabledProduct.some(t=>t.salesChannel.id===e&&"1"===t.value)},getConfigExportSelection(e){return this.config.lengowSelectionEnabled.some(t=>t.salesChannel.id===e&&"1"===t.value)},getShippingMethod(e){let t=new eS;return t.getAssociation("salesChannels"),t.addFilter(eS.equals("salesChannels.id",e.id)),this.shippingMethodRepository.search(t,Shopware.Context.api).then(t=>{t.forEach(t=>{this.shippingMethods=[...this.shippingMethods,{salesChannelId:e.id,salesChannelName:e.name,name:t.name,value:t.id}]})})}}}),n(9527);let{Component:eC,Data:{Criteria:ey}}=Shopware;eC.register("lgw-setting-general",{template:'{% block lgw_setting_general %}\n    <sw-card-view class="lgw-setting-general">\n        {% block lgw_setting_general_environment %}\n            <sw-card :title="$tc(\'lengow-connector.setting.title.environment\')">\n                <sw-help-text class="lgw-help-text"\n                              :text="$tc(\'lengow-connector.setting.lengow_main_setting.environment.description\')"\n                              :width="200"\n                              tooltipPosition="right">\n                </sw-help-text>\n                <sw-select-field class="text-center"\n                                  :label="$tc(\'lengow-connector.setting.lengow_main_setting.environment.label\')"\n                                  v-model="lengowEnvironmentUrl"\n                                  @change="onSaveSettings($event, \'lengowEnvironmentUrl\')"\n                                  @update:value="onSaveSettings($event, \'lengowEnvironmentUrl\')"\n                >\n                    <option value=".net">Preprod</option>\n                    <option value=".io">Prod</option>\n                </sw-select-field >\n            </sw-card>\n        {% endblock %}\n        {% block lgw_setting_general_credentials %}\n            <sw-card :title="$tc(\'lengow-connector.setting.title.credentials\')">\n                <lgw-lockable-string-field\n                        :fieldContent="lengowAccountId"\n                        :locked="!credentialLocked"\n                        :fieldLabel="$tc(\'lengow-connector.setting.lengow_main_setting.account.label\')"\n                        :onSaveSettings="onSaveSettings"\n                        settingsKey="lengowAccountId"\n                        :helpText="$tc(\'lengow-connector.setting.lengow_main_setting.account.description\')">\n                </lgw-lockable-string-field>\n                <lgw-lockable-string-field\n                        :fieldContent="lengowAccessToken"\n                        :locked="!credentialLocked"\n                        :fieldLabel="$tc(\'lengow-connector.setting.lengow_main_setting.access.label\')"\n                        :onSaveSettings="onSaveSettings"\n                        settingsKey="lengowAccessToken"\n                        :helpText="$tc(\'lengow-connector.setting.lengow_main_setting.access.description\')">\n                </lgw-lockable-string-field>\n                <lgw-lockable-string-field\n                        :fieldContent="lengowSecretToken"\n                        :locked="!credentialLocked"\n                        :fieldLabel="$tc(\'lengow-connector.setting.lengow_main_setting.secret.label\')"\n                        :onSaveSettings="onSaveSettings"\n                        settingsKey="lengowSecretToken"\n                        :helpText="$tc(\'lengow-connector.setting.lengow_main_setting.secret.description\')">\n                </lgw-lockable-string-field>\n            </sw-card>\n        {% endblock %}\n        {% block lgw_setting_general_sales_channel %}\n            <sw-card :title="$tc(\'lengow-connector.setting.title.sales_channel\')">\n                <template v-if="render">\n                    <lgw-conditional-string-field\n                            v-if="render"\n                            v-for="salesChannel in salesChannels"\n                            switchSettingsKey="lengowStoreEnabled"\n                            :fieldContent.sync="salesChannel.catalogId"\n                            fieldSettingsKey="lengowCatalogId"\n                            :settingsSalesChannelId="salesChannel.salesChannelId"\n                            :onSaveSettings="onSaveSettings"\n                            :fieldContent="salesChannel.catalogId"\n                            :locked="salesChannel.enabled"\n                            :switchLabel="$tc(\'lengow-connector.setting.lengow_main_setting.enable.label\') + \' \' + salesChannel.label"\n                            :switchHelpText="$tc(\'lengow-connector.setting.lengow_main_setting.enable.description\')"\n                            :fieldLabel="$tc(\'lengow-connector.setting.lengow_main_setting.catalog.label\')"\n                            :helpText="$tc(\'lengow-connector.setting.lengow_main_setting.catalog.description\')">\n                    </lgw-conditional-string-field>\n                </template>\n                <template v-else>\n                    <sw-loader></sw-loader>\n                </template>\n            </sw-card>\n        {% endblock %}\n        {% block lgw_setting_general_sales_security %}\n            <sw-card :title="$tc(\'lengow-connector.setting.title.security\')">\n                <sw-help-text class="lgw-help-text"\n                              :text="$tc(\'lengow-connector.setting.lengow_main_setting.ip_enable.description\')"\n                              :width="200"\n                              tooltipPosition="right">\n                </sw-help-text>\n                <sw-switch-field class="text-center"\n                                 :label="$tc(\'lengow-connector.setting.lengow_main_setting.ip_enable.label\')"\n                                 v-model="lengowIpEnabled"\n                                    @update:value="onSaveSettings($event, \'lengowIpEnabled\')"\n                                    @change="onSaveSettings($event, \'lengowIpEnabled\')"\n                >\n                </sw-switch-field>\n                <lgw-lockable-string-field :fieldContent="lengowAuthorizedIp"\n                                           :locked="!lengowIpEnabled"\n                                           :fieldLabel="$tc(\'lengow-connector.setting.lengow_main_setting.ip.label\')"\n                                           :onSaveSettings="onSaveSettings"\n                                           settingsKey="lengowAuthorizedIp"\n                                           :helpText="$tc(\'lengow-connector.setting.lengow_main_setting.ip.description\')">\n                </lgw-lockable-string-field>\n                <sw-help-text class="lgw-help-text"\n                              :text="$tc(\'lengow-connector.setting.lengow_main_setting.tracking_enable.description\')"\n                              :width="200"\n                              tooltipPosition="right">\n                </sw-help-text>\n                <sw-switch-field class="text-center"\n                                 :label="$tc(\'lengow-connector.setting.lengow_main_setting.tracking_enable.label\')"\n                                 v-model="lengowTrackingEnabled"\n                                @update:value="onSaveSettings($event, \'lengowTrackingEnabled\')"\n                                @change="onSaveSettings($event, \'lengowTrackingEnabled\')"\n                >\n                </sw-switch-field>\n                <sw-help-text class="lgw-help-text"\n                              :text="$tc(\'lengow-connector.setting.lengow_main_setting.tracking_id.description\')"\n                              :width="200"\n                              tooltipPosition="right">\n                </sw-help-text>\n                <sw-select-field :label="$tc(\'lengow-connector.setting.lengow_main_setting.tracking_id.label\')"\n                                 v-model="lengowTrackingId"\n                                 :disabled="!lengowTrackingEnabled"\n                                @update:value="onSaveSettings($event, \'lengowTrackingId\')"\n                                @change="onSaveSettings($event, \'lengowTrackingId\')"\n                >\n                    <option value="productId">{{ $tc(\'lengow-connector.setting.lengow_main_setting.tracking_value.traking_id\') }}</option>\n                    <option value="productNumber">{{ $tc(\'lengow-connector.setting.lengow_main_setting.tracking_value.traking_reference\') }}</option>\n                </sw-select-field>\n            </sw-card>\n        {% endblock %}\n        {% block lgw_setting_general_timezone %}\n            <sw-card :title="$tc(\'lengow-connector.setting.title.timezone\')">\n                <sw-help-text class="lgw-help-text"\n                              :text="$tc(\'lengow-connector.setting.lengow_main_setting.timezone.description\')"\n                              :width="200"\n                              tooltipPosition="right"/>\n                <sw-select-field placeholder="Select timezone"\n                                 :label="$tc(\'lengow-connector.setting.lengow_main_setting.timezone.label\')"\n                                 v-model="lengowTimezone"\n                                @update:value="onSaveSettings($event, \'lengowTimezone\')"\n                                @change="onSaveSettings($event, \'lengowTimezone\')"\n                >\n                    <option value="Etc/GMT+12">(GMT-12:00) International Date Line West</option>\n                    <option value="Pacific/Midway">(GMT-11:00) Midway Island, Samoa</option>\n                    <option value="Pacific/Honolulu">(GMT-10:00) Hawaii</option>\n                    <option value="US/Alaska">(GMT-09:00) Alaska</option>\n                    <option value="America/Los_Angeles">(GMT-08:00) Pacific Time (US & Canada)</option>\n                    <option value="America/Tijuana">(GMT-08:00) Tijuana, Baja California</option>\n                    <option value="US/Arizona">(GMT-07:00) Arizona</option>\n                    <option value="America/Chihuahua">(GMT-07:00) Chihuahua, La Paz, Mazatlan</option>\n                    <option value="US/Mountain">(GMT-07:00) Mountain Time (US & Canada)</option>\n                    <option value="America/Managua">(GMT-06:00) Central America</option>\n                    <option value="US/Central">(GMT-06:00) Central Time (US & Canada)</option>\n                    <option value="America/Mexico_City">(GMT-06:00) Guadalajara, Mexico City, Monterrey</option>\n                    <option value="Canada/Saskatchewan">(GMT-06:00) Saskatchewan</option>\n                    <option value="America/Bogota">(GMT-05:00) Bogota, Lima, Quito, Rio Branco</option>\n                    <option value="US/Eastern">(GMT-05:00) Eastern Time (US & Canada)</option>\n                    <option value="US/East-Indiana">(GMT-05:00) Indiana (East)</option>\n                    <option value="Canada/Atlantic">(GMT-04:00) Atlantic Time (Canada)</option>\n                    <option value="America/Caracas">(GMT-04:00) Caracas, La Paz</option>\n                    <option value="America/Manaus">(GMT-04:00) Manaus</option>\n                    <option value="America/Santiago">(GMT-04:00) Santiago</option>\n                    <option value="Canada/Newfoundland">(GMT-03:30) Newfoundland</option>\n                    <option value="America/Sao_Paulo">(GMT-03:00) Brasilia</option>\n                    <option value="America/Argentina/Buenos_Aires">(GMT-03:00) Buenos Aires, Georgetown</option>\n                    <option value="America/Godthab">(GMT-03:00) Greenland</option>\n                    <option value="America/Montevideo">(GMT-03:00) Montevideo</option>\n                    <option value="America/Noronha">(GMT-02:00) Mid-Atlantic</option>\n                    <option value="Atlantic/Cape_Verde">(GMT-01:00) Cape Verde Is.</option>\n                    <option value="Atlantic/Azores">(GMT-01:00) Azores</option>\n                    <option value="Africa/Casablanca">(GMT+00:00) Casablanca, Monrovia, Reykjavik</option>\n                    <option value="Etc/Greenwich">(GMT+00:00) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London</option>\n                    <option value="Europe/Amsterdam">(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna</option>\n                    <option value="Europe/Belgrade">(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague</option>\n                    <option value="Europe/Brussels">(GMT+01:00) Brussels, Copenhagen, Madrid, Paris</option>\n                    <option value="Europe/Sarajevo">(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb</option>\n                    <option value="Africa/Lagos">(GMT+01:00) West Central Africa</option>\n                    <option value="Asia/Amman">(GMT+02:00) Amman</option>\n                    <option value="Europe/Athens">(GMT+02:00) Athens, Bucharest, Istanbul</option>\n                    <option value="Asia/Beirut">(GMT+02:00) Beirut</option>\n                    <option value="Africa/Cairo">(GMT+02:00) Cairo</option>\n                    <option value="Africa/Harare">(GMT+02:00) Harare, Pretoria</option>\n                    <option value="Europe/Helsinki">(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius</option>\n                    <option value="Asia/Jerusalem">(GMT+02:00) Jerusalem</option>\n                    <option value="Europe/Minsk">(GMT+02:00) Minsk</option>\n                    <option value="Africa/Windhoek">(GMT+02:00) Windhoek</option>\n                    <option value="Asia/Kuwait">(GMT+03:00) Kuwait, Riyadh, Baghdad</option>\n                    <option value="Europe/Moscow">(GMT+03:00) Moscow, St. Petersburg, Volgograd</option>\n                    <option value="Africa/Nairobi">(GMT+03:00) Nairobi</option>\n                    <option value="Asia/Tbilisi">(GMT+03:00) Tbilisi</option>\n                    <option value="Asia/Tehran">(GMT+03:30) Tehran</option>\n                    <option value="Asia/Muscat">(GMT+04:00) Abu Dhabi, Muscat</option>\n                    <option value="Asia/Baku">(GMT+04:00) Baku</option>\n                    <option value="Asia/Yerevan">(GMT+04:00) Yerevan</option>\n                    <option value="Asia/Kabul">(GMT+04:30) Kabul</option>\n                    <option value="Asia/Yekaterinburg">(GMT+05:00) Yekaterinburg</option>\n                    <option value="Asia/Karachi">(GMT+05:00) Islamabad, Karachi, Tashkent</option>\n                    <option value="Asia/Calcutta">(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi</option>\n                    <option value="Asia/Calcutta">(GMT+05:30) Sri Jayawardenapura</option>\n                    <option value="Asia/Katmandu">(GMT+05:45) Kathmandu</option>\n                    <option value="Asia/Almaty">(GMT+06:00) Almaty, Novosibirsk</option>\n                    <option value="Asia/Dhaka">(GMT+06:00) Astana, Dhaka</option>\n                    <option value="Asia/Rangoon">(GMT+06:30) Yangon (Rangoon)</option>\n                    <option value="Asia/Bangkok">(GMT+07:00) Bangkok, Hanoi, Jakarta</option>\n                    <option value="Asia/Krasnoyarsk">(GMT+07:00) Krasnoyarsk</option>\n                    <option value="Asia/Hong_Kong">(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi</option>\n                    <option value="Asia/Kuala_Lumpur">(GMT+08:00) Kuala Lumpur, Singapore</option>\n                    <option value="Asia/Irkutsk">(GMT+08:00) Irkutsk, Ulaan Bataar</option>\n                    <option value="Australia/Perth">(GMT+08:00) Perth</option>\n                    <option value="Asia/Taipei">(GMT+08:00) Taipei</option>\n                    <option value="Asia/Tokyo">(GMT+09:00) Osaka, Sapporo, Tokyo</option>\n                    <option value="Asia/Seoul">(GMT+09:00) Seoul</option>\n                    <option value="Asia/Yakutsk">(GMT+09:00) Yakutsk</option>\n                    <option value="Australia/Adelaide">(GMT+09:30) Adelaide</option>\n                    <option value="Australia/Darwin">(GMT+09:30) Darwin</option>\n                    <option value="Australia/Brisbane">(GMT+10:00) Brisbane</option>\n                    <option value="Australia/Canberra">(GMT+10:00) Canberra, Melbourne, Sydney</option>\n                    <option value="Australia/Hobart">(GMT+10:00) Hobart</option>\n                    <option value="Pacific/Guam">(GMT+10:00) Guam, Port Moresby</option>\n                    <option value="Asia/Vladivostok">(GMT+10:00) Vladivostok</option>\n                    <option value="Asia/Magadan">(GMT+11:00) Magadan, Solomon Is., New Caledonia</option>\n                    <option value="Pacific/Auckland">(GMT+12:00) Auckland, Wellington</option>\n                    <option value="Pacific/Fiji">(GMT+12:00) Fiji, Kamchatka, Marshall Is.</option>\n                    <option value="Pacific/Tongatapu">(GMT+13:00) Nuku\'alofa</option>\n                </sw-select-field>\n            </sw-card>\n        {% endblock %}\n        {% block lgw_setting_general_footer %}\n            <lgw-footer></lgw-footer>\n        {% endblock %}\n    </sw-card-view>\n{% endblock %}\n',inject:["repositoryFactory"],props:{locked:{type:Boolean,required:!1,default:!0},config:{type:Object,required:!0,default:{}},onSaveSettings:{type:Object,required:!0}},data(){return{salesChannels:[],lengowAccountId:"",lengowAccessToken:"",lengowSecretToken:"",lengowEnvironmentUrl:".io",lengowIpEnabled:!1,lengowAuthorizedIp:"",lengowTrackingEnabled:!1,lengowTrackingId:"",lengowTimezone:"",credentialLocked:!0,render:!1}},created(){let e=new ey;e.addAssociation("domains"),this.salesChannelRepository.search(e,Shopware.Context.api).then(e=>{e.forEach(e=>{this.salesChannels=[...this.salesChannels,{salesChannelId:e.id,label:e.name,value:e.id,enabled:this.getConfigSalesChannelEnabledValue(e.id),catalogId:this.getConfigCatalogIdValue(e.id)}]}),this.render=!0}),this.lengowAccountId=this.config.lengowAccountId.value,this.lengowAccessToken=this.config.lengowAccessToken.value,this.lengowSecretToken=this.config.lengowSecretToken.value,this.lengowEnvironmentUrl=this.config.lengowEnvironmentUrl.value,this.lengowIpEnabled="1"===this.config.lengowIpEnabled.value,this.lengowAuthorizedIp=this.config.lengowAuthorizedIp.value,this.lengowTrackingEnabled="1"===this.config.lengowTrackingEnabled.value,this.lengowTrackingId=this.config.lengowTrackingId.value,this.lengowTimezone=this.config.lengowTimezone.value,this.credentialLocked="1"===this.config.lengowDebugEnabled.value},computed:{systemConfigRepository(){return this.repositoryFactory.create("system_config")},lengowConfigRepository(){return this.repositoryFactory.create("lengow_settings")},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")}},methods:{getConfigCatalogIdValue(e){let t=this.config.lengowCatalogId.find(t=>t.salesChannel.id===e);return"undefined"!==t?t.value:""},getConfigSalesChannelEnabledValue(e){return this.config.lengowStoreEnabled.some(t=>t.salesChannel.id===e&&"1"===t.value)}}}),n(9964);let{Component:ex,Data:{Criteria:eL}}=Shopware;ex.register("lgw-setting-import",{template:'{% block lgw_setting_import %}\n    <sw-card-view class="lgw-setting-import">\n        {% block lgw_setting_import_marketplaces %}\n            <sw-card :title="$tc(\'lengow-connector.setting.title.marketplaces\')">\n                <sw-help-text class="lgw-help-text"\n                              :text="$tc(\'lengow-connector.setting.lengow_import_setting.ship_mp_enabled.description\')"\n                              :width="200"\n                              tooltipPosition="right"/>\n                <sw-switch-field class="text-center"\n                                 :label="$tc(\'lengow-connector.setting.lengow_import_setting.ship_mp_enabled.label\')"\n                                 v-model="lengowImportShipMpEnabled"\n                                @update:value="onSaveSettings($event, \'lengowImportShipMpEnabled\')"\n                                @change="onSaveSettings($event, \'lengowImportShipMpEnabled\')"\n                >\n                </sw-switch-field>\n                <sw-help-text class="lgw-help-text"\n                              :text="$tc(\'lengow-connector.setting.lengow_import_setting.decrease_stock.description\')"\n                              :width="200"\n                              tooltipPosition="right"/>\n                <sw-switch-field class="text-center"\n                                 :label="$tc(\'lengow-connector.setting.lengow_import_setting.decrease_stock.label\')"\n                                 :disabled="!lengowImportShipMpEnabled"\n                                 v-model="lengowImportStockShipMp"\n                                @update:value="onSaveSettings($event, \'lengowImportStockShipMp\')"\n                                @change="onSaveSettings($event, \'lengowImportStockShipMp\')"\n                >\n                </sw-switch-field>\n            </sw-card>\n        {% endblock %}\n        {% block lgw_setting_import_shipping %}\n            <sw-card :title="$tc(\'lengow-connector.setting.lengow_import_setting.shipping.label\')">\n                <template v-if="render">\n                    <sw-help-text class="lgw-help-text"\n                                  :text="$tc(\'lengow-connector.setting.lengow_import_setting.shipping.description\')"\n                                  :width="200"\n                                  tooltipPosition="right"/>\n                    <sw-select-field v-for="salesChannel in salesChannels"\n                                     :label="salesChannel.label"\n                                     v-model="salesChannel.defaultShippingMethod"\n                                    @update:value="onSaveSettings($event, \'lengowImportDefaultShippingMethod\', salesChannel.salesChannelId)"\n                                    @change="onSaveSettings($event, \'lengowImportDefaultShippingMethod\', salesChannel.salesChannelId)"\n                    >\n                        <template v-for="shippingMethod in shippingMethods">\n                            <option v-if="salesChannel.salesChannelId === shippingMethod.salesChannelId"\n                                    :value="shippingMethod.value">\n                                {{ shippingMethod.name }}\n                            </option>\n                        </template>\n                    </sw-select-field>\n                </template>\n                <template v-else>\n                    <sw-loader></sw-loader>\n                </template>\n            </sw-card>\n        {% endblock %}\n        {% block lgw_setting_import_other %}\n            <sw-card :title="$tc(\'lengow-connector.setting.title.others\')">\n                <sw-help-text class="lgw-help-text"\n                              :text="$tc(\'lengow-connector.setting.lengow_import_setting.import_days.description\')"\n                              :width="200"\n                              tooltipPosition="right"/>\n                <sw-number-field numberType="int"\n                                 :step="null"\n                                 :min="1" :max="10"\n                                 :value="lengowImportDays"\n                                 :digits="2"\n                                 :label="$tc(\'lengow-connector.setting.lengow_import_setting.import_days.label\')"\n                                    @update:value="onSaveSettings($event, \'lengowImportDays\')"\n                                    @change="onSaveSettings($event, \'lengowImportDays\')"\n                >\n                </sw-number-field>\n                <sw-switch-field class="text-center"\n                                 :label="$tc(\'lengow-connector.setting.lengow_import_setting.report_mail_enabled.label\')"\n                                 v-model="lengowReportMailEnabled"\n                                @update:value="onSaveSettings($event, \'lengowReportMailEnabled\')"\n                                @change="onSaveSettings($event, \'lengowReportMailEnabled\')"\n                >\n                </sw-switch-field>\n                <lgw-lockable-string-field :fieldContent="lengowReportMailAddress"\n                                           :locked="!lengowReportMailEnabled"\n                                           :fieldLabel="$tc(\'lengow-connector.setting.lengow_import_setting.report_mail_address.label\')"\n                                           :onSaveSettings="onSaveSettings"\n                                           settingsKey="lengowReportMailAddress"\n                                           :helpText="$tc(\'lengow-connector.setting.lengow_import_setting.report_mail_address.description\')">\n                </lgw-lockable-string-field>\n                <sw-help-text class="lgw-help-text"\n                              :text="$tc(\'lengow-connector.setting.lengow_import_setting.currency_conversion_title.description\')"\n                              :width="200"\n                              tooltipPosition="right">\n                </sw-help-text>\n                <sw-switch-field class="text-center"\n                                 :label="$tc(\'lengow-connector.setting.lengow_import_setting.currency_conversion_title.label\')"\n                                 v-model="lengowCurrencyConversion"\n                                @update:value="onSaveSettings($event, \'lengowCurrencyConversion\')"\n                                @change="onSaveSettings($event, \'lengowCurrencyConversion\')"\n                >\n                </sw-switch-field>\n                <sw-help-text class="lgw-help-text"\n                              :text="$tc(\'lengow-connector.setting.lengow_import_setting.import_btob.description\')"\n                              :width="200"\n                              tooltipPosition="right"/>\n                <sw-switch-field class="text-center"\n                                 :label="$tc(\'lengow-connector.setting.lengow_import_setting.import_btob.label\')"\n                                 v-model="lengowImportB2b"\n                                @update:value="onSaveSettings($event, \'lengowImportB2b\')"\n                                @change="onSaveSettings($event, \'lengowImportB2b\')"\n                >\n                </sw-switch-field>\n                <sw-help-text class="lgw-help-text"\n                              :text="$tc(\'lengow-connector.setting.lengow_import_setting.debug_mode.description\')"\n                              :width="200"\n                              tooltipPosition="right"/>\n                <sw-switch-field class="text-center"\n                                 :label="$tc(\'lengow-connector.setting.lengow_import_setting.debug_mode.label\')"\n                                 v-model="lengowDebugEnabled"\n                                @update:value="onSaveSettings($event, \'lengowDebugEnabled\')"\n                                @change="onSaveSettings($event, \'lengowDebugEnabled\')"\n                >\n                </sw-switch-field>\n            </sw-card>\n        {% endblock %}\n        {% block lgw_setting_import_footer %}\n            <lgw-footer></lgw-footer>\n        {% endblock %}\n    </sw-card-view>\n{% endblock %}\n',inject:["repositoryFactory","LengowConnectorSyncService"],props:{config:{type:Object,required:!0,default:{}},onSaveSettings:{type:Object,required:!0},onChangeStatus:{type:Object,required:!0}},data(){return{lengowImportShipMpEnabled:!1,lengowImportStockShipMp:!1,lengowImportDays:3,lengowReportMailEnabled:null,lengowReportMailAddress:[],lengowCurrencyConversion:!1,lengowImportB2b:!1,lengowDebugEnabled:!1,salesChannels:[],shippingMethods:[],render:!1}},created(){let e=new eL;e.addAssociation("domains"),this.salesChannelRepository.search(e,Shopware.Context.api).then(e=>{e.forEach(e=>{let t=new eL;t.getAssociation("salesChannels"),t.addFilter(eL.equals("salesChannels.id",e.id)),this.shippingMethodRepository.search(t,Shopware.Context.api).then(t=>{t.forEach(t=>{this.shippingMethods=[...this.shippingMethods,{salesChannelId:e.id,salesChannelName:e.name,name:t.name,value:t.id}]})}),this.getConfigImportDefaultShippingMethod(e.id).then(t=>{this.salesChannels=[...this.salesChannels,{salesChannelId:e.id,label:e.name,value:e.id,defaultShippingMethod:t}],this.render=!0})})}),this.lengowImportShipMpEnabled="1"===this.config.lengowImportShipMpEnabled.value,this.lengowImportStockShipMp="1"===this.config.lengowImportStockShipMp.value,this.lengowImportDays=this.config.lengowImportDays.value,this.lengowReportMailEnabled="1"===this.config.lengowReportMailEnabled.value,this.lengowReportMailAddress=this.config.lengowReportMailAddress.value,this.lengowCurrencyConversion="1"===this.config.lengowCurrencyConversion.value,this.lengowImportB2b="1"===this.config.lengowImportB2b.value,this.lengowDebugEnabled="1"===this.config.lengowDebugEnabled.value},computed:{systemConfigRepository(){return this.repositoryFactory.create("system_config")},lengowConfigRepository(){return this.repositoryFactory.create("lengow_settings")},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},shippingMethodRepository(){return this.repositoryFactory.create("shipping_method")},salesChannelShippingMethodRepository(){return this.repositoryFactory.create("sales_channel_shipping_method")}},methods:{getConfigImportDefaultShippingMethod(e){let t="";if(this.config.lengowImportDefaultShippingMethod.forEach(n=>{n.salesChannel.id===e&&(t=n.value)}),""===t)return"Not found";let n=new eL;return n.addFilter(eL.equals("id",t)),this.shippingMethodRepository.search(n,Shopware.Context.api).then(e=>0!==e.total?e.first().id:"Not found")},onChangeStatus(e,t){this.LengowConnectorSyncService.onChangeStatus().then(e=>{e.success||console.error("Failure to create custom field :",e.error)})}}});let{Component:e$}=Shopware,{mapState:eM,mapGetters:eT}=Shopware.Component.getComponentHelper();e$.register("lgw-toolbox-base",{template:'{% block lgw_toolbox_base %}\n    <div v-if="!isLoading" class="lgw-toolbox-base">\n        {% block lgw_toolbox_base_checklist %}\n            <sw-card :title="$tc(\'lengow-connector.toolbox.checklist.title\')">\n                <sw-container columns="repeat(auto-fit, minmax(250px, 1fr))" gap="30px 30px">\n                    <sw-description-list columns="1fr" grid="1fr">\n                        <lgw-description-list-element\n                                :title="$tc(\'lengow-connector.toolbox.checklist.curl_message\')"\n                                :value="overviewData.checklist.curl_activated"\n                                :helpText="$tc(\'lengow-connector.toolbox.checklist.curl_help\')"\n                                :type="\'bool\'">\n                        </lgw-description-list-element>\n                        <lgw-description-list-element\n                                :title="$tc(\'lengow-connector.toolbox.checklist.simple_xml_message\')"\n                                :value="overviewData.checklist.simple_xml_activated"\n                                :helpText="$tc(\'lengow-connector.toolbox.checklist.simple_xml_help\')"\n                                :type="\'bool\'">\n                        </lgw-description-list-element>\n                    </sw-description-list>\n                    <sw-description-list columns="1fr" grid="1fr">\n                        <lgw-description-list-element\n                                :title="$tc(\'lengow-connector.toolbox.checklist.json_php_message\')"\n                                :value="overviewData.checklist.json_activated"\n                                :helpText="$tc(\'lengow-connector.toolbox.checklist.json_php_help\')"\n                                :type="\'bool\'">\n                        </lgw-description-list-element>\n                        <lgw-description-list-element\n                                :title="$tc(\'lengow-connector.toolbox.checklist.checksum_message\')"\n                                :value="overviewData.checklist.md5_success"\n                                :helpText="$tc(\'lengow-connector.toolbox.checklist.checksum_help\')"\n                                :type="\'bool\'">\n                        </lgw-description-list-element>\n                    </sw-description-list>\n                </sw-container>\n            </sw-card>\n        {% endblock %}\n        {% block lgw_toolbox_base_plugin %}\n            <sw-card :title="$tc(\'lengow-connector.toolbox.plugin.title\')">\n                <sw-container slot="grid" type="row">\n                    <sw-card-section>\n                        <sw-container columns="repeat(auto-fit, minmax(250px, 1fr))" gap="30px 30px">\n                            <sw-description-list columns="1fr" grid="1fr">\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.plugin.version\')"\n                                        :value="overviewData.plugin.cms_version">\n                                </lgw-description-list-element>\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.plugin.plugin_version\')"\n                                        :value="overviewData.plugin.plugin_version">\n                                </lgw-description-list-element>\n                                <lgw-description-list-element\n                                    :title="$tc(\'lengow-connector.toolbox.plugin.php_version\')"\n                                    :value="overviewData.plugin.php_version">\n                                </lgw-description-list-element>\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.plugin.debug_disabled\')"\n                                        :value="overviewData.plugin.debug_mode_disable"\n                                        :type="\'bool\'">\n                                </lgw-description-list-element>\n                            </sw-description-list>\n                            <sw-description-list columns="1fr" grid="1fr">\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.plugin.server_ip\')"\n                                        :value="overviewData.plugin.server_ip">\n                                </lgw-description-list-element>\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.plugin.authorized_ip_enable\')"\n                                        :value="overviewData.plugin.authorized_ip_enable"\n                                        :type="\'bool\'">\n                                </lgw-description-list-element>\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.plugin.authorized_ips\')"\n                                        :value="overviewData.plugin.authorized_ips"\n                                        :type="\'array\'">\n                                </lgw-description-list-element>\n                                <lgw-description-list-element\n                                    :title="$tc(\'lengow-connector.toolbox.plugin.write_permission\')"\n                                    :value="overviewData.plugin.write_permission"\n                                    :type="\'bool\'">\n                                </lgw-description-list-element>\n                            </sw-description-list>\n                        </sw-container>\n                    </sw-card-section>\n                    <sw-card-section divider="top" secondary slim>\n                        <sw-description-list columns="1fr" grid="1fr">\n                            <lgw-description-list-element\n                                :title="$tc(\'lengow-connector.toolbox.plugin.toolbox_url\')"\n                                :value="overviewData.plugin.toolbox_url">\n                            </lgw-description-list-element>\n                        </sw-description-list>\n                    </sw-card-section>\n                </sw-container>\n            </sw-card>\n        {% endblock %}\n        {% block lgw_toolbox_base_import %}\n            <sw-card :title="$tc(\'lengow-connector.toolbox.import.title\')">\n                <sw-container slot="grid" type="row">\n                    <sw-card-section>\n                        <sw-description-list columns="1fr" grid="1fr">\n                            <lgw-description-list-element\n                                    :title="$tc(\'lengow-connector.toolbox.import.global_token\')"\n                                    :value="overviewData.synchronization.cms_token">\n                            </lgw-description-list-element>\n                            <lgw-description-list-element\n                                    :title="$tc(\'lengow-connector.toolbox.import.url_import\')"\n                                    :value="overviewData.synchronization.cron_url">\n                            </lgw-description-list-element>\n                        </sw-description-list>\n                    </sw-card-section>\n                    <sw-card-section divider="top" secondary slim>\n                        <sw-container columns="repeat(auto-fit, minmax(250px, 1fr))" gap="30px 30px">\n                            <sw-description-list columns="1fr" grid="1fr">\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.import.import_in_progress\')"\n                                        :value="overviewData.synchronization.synchronization_in_progress"\n                                        :helpText="$tc(\'lengow-connector.toolbox.import.no_import\')"\n                                        :type="\'bool\'">\n                                </lgw-description-list-element>\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.import.last_import\')"\n                                        :value="overviewData.synchronization.last_synchronization"\n                                        :type="\'date\'">\n                                </lgw-description-list-element>\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.import.last_import_type\')"\n                                        :value="overviewData.synchronization.last_synchronization_type">\n                                </lgw-description-list-element>\n                            </sw-description-list>\n                            <sw-description-list columns="1fr" grid="1fr">\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.import.nb_order_imported\')"\n                                        :value="overviewData.synchronization.number_orders_imported">\n                                </lgw-description-list-element>\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.import.nb_order_to_be_sent\')"\n                                        :value="overviewData.synchronization.number_orders_waiting_shipment">\n                                </lgw-description-list-element>\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.import.nb_order_with_error\')"\n                                        :value="overviewData.synchronization.number_orders_in_error">\n                                </lgw-description-list-element>\n                            </sw-description-list>\n                        </sw-container>\n                    </sw-card-section>\n                </sw-container>\n            </sw-card>\n        {% endblock %}\n        {% block lgw_toolbox_base_export %}\n            <sw-card v-for="sales_channel in overviewData.shops" :title="sales_channel.shop_name">\n                <sw-container slot="grid" type="row">\n                    <sw-card-section>\n                        <sw-description-list columns="1fr" grid="1fr">\n                            <lgw-description-list-element\n                                    :title="$tc(\'lengow-connector.toolbox.export.id\')"\n                                    :value="sales_channel.shop_id">\n                            </lgw-description-list-element>\n                            <lgw-description-list-element\n                                    :title="$tc(\'lengow-connector.toolbox.export.domain_url\')"\n                                    :value="sales_channel.domain_url">\n                            </lgw-description-list-element>\n                            <lgw-description-list-element\n                                    :title="$tc(\'lengow-connector.toolbox.export.token\')"\n                                    :value="sales_channel.shop_token">\n                            </lgw-description-list-element>\n                            <lgw-description-list-element\n                                    :title="$tc(\'lengow-connector.toolbox.export.feed_url\')"\n                                    :value="sales_channel.feed_url">\n                            </lgw-description-list-element>\n                        </sw-description-list>\n                    </sw-card-section>\n                    <sw-card-section divider="top" secondary slim>\n                        <sw-container columns="repeat(auto-fit, minmax(250px, 1fr))" gap="30px 30px">\n                            <sw-description-list columns="1fr" grid="1fr">\n                                <lgw-description-list-element :title="$tc(\'lengow-connector.toolbox.export.enabled\')"\n                                                  :value="sales_channel.enabled"\n                                                  :type="\'bool\'">\n                                </lgw-description-list-element>\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.export.catalog_id\')"\n                                        :value="sales_channel.catalog_ids"\n                                        :type="\'array\'">\n                                </lgw-description-list-element>\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.export.last_export\')"\n                                        :value="sales_channel.last_export"\n                                        :type="\'date\'">\n                                </lgw-description-list-element>\n                            </sw-description-list>\n                            <sw-description-list>\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.export.total_product_number\')"\n                                        :value="sales_channel.number_products_available">\n                                </lgw-description-list-element>\n                                <lgw-description-list-element\n                                        :title="$tc(\'lengow-connector.toolbox.export.exported_product_number\')"\n                                        :value="sales_channel.number_products_exported">\n                                </lgw-description-list-element>\n                            </sw-description-list>\n                        </sw-container>\n                    </sw-card-section>\n                </sw-container>\n            </sw-card>\n        {% endblock %}\n    </div>\n    <div v-else>\n        <sw-loader></sw-loader>\n    </div>\n{% endblock %}\n',inject:[],mixins:[],data(){return{}},created(){},computed:{...eM("lgwToolbox",["overviewData","loading"]),...eT("lgwToolbox",["isLoading"])},methods:{}}),n(8293);let{Component:eI}=Shopware,{mapState:eA,mapGetters:eR}=Shopware.Component.getComponentHelper();eI.register("lgw-toolbox-checksum",{template:'{% block lgw_toolbox_checksum %}\n    <div v-if="!isLoading" class="lgw-toolbox-checksum">\n        {% block lgw_toolbox_checksum_overview %}\n            <sw-card :title="$tc(\'lengow-connector.toolbox.checksum.title\')">\n                <h4>{{ $tc(\'lengow-connector.toolbox.checksum.summary\') }}</h4>\n                <sw-description-list v-if="checksumAvailable" columns="1fr" grid="1fr">\n                    <lgw-description-list-element\n                            :title="fileCheckedCounterLabel"\n                            :value="fileCheckedCounterValue"\n                            :type="\'bool\'">\n                    </lgw-description-list-element>\n                    <lgw-description-list-element\n                            :title="fileModifiedCounterLabel"\n                            :value="fileModifiedCounterValue"\n                            :type="\'bool\'">\n                    </lgw-description-list-element>\n                    <lgw-description-list-element\n                            :title="fileDeletedCounterLabel"\n                            :value="fileDeletedCounterValue"\n                            :type="\'bool\'">\n                    </lgw-description-list-element>\n                </sw-description-list>\n                <div v-else>\n                    {{ $tc(\'lengow-connector.toolbox.checksum.file_not_exists\') }}\n                </div>\n            </sw-card>\n        {% endblock %}\n        {% block lgw_toolbox_checksum_file_modified %}\n            <sw-card v-if="fileHasModified" :title="$tc(\'lengow-connector.toolbox.checksum.list_modified_file\')">\n                <h4>{{ fileModifiedCounterLabel }}</h4>\n                <ul>\n                    <li v-for="file in fileModified">\n                        {{ file }}\n                    </li>\n                </ul>\n            </sw-card>\n        {% endblock %}\n        {% block lgw_toolbox_checksum_file_deleted %}\n            <sw-card v-if="fileHasDeleted" :title="$tc(\'lengow-connector.toolbox.checksum.list_deleted_file\')">\n                <h4>{{ fileDeletedCounterLabel }}</h4>\n                <ul>\n                    <li v-for="file in fileDeleted">\n                        {{ file }}\n                    </li>\n                </ul>\n            </sw-card>\n        {% endblock %}\n    </div>\n    <div v-else>\n        <sw-loader></sw-loader>\n    </div>\n{% endblock %}',inject:[],mixins:[],data(){return{checksumAvailable:!0,checksumSuccess:!0,fileHasModified:!1,fileHasDeleted:!1,fileModified:[],fileDeleted:[],fileCheckedCounterLabel:"",fileCheckedCounterValue:!0,fileModifiedCounterLabel:"",fileModifiedCounterValue:!0,fileDeletedCounterLabel:"",fileDeletedCounterValue:!0,isLoading:!0}},mounted(){this.mountedComponent()},computed:{...eA("lgwToolbox",["checksumData"]),...eR("lgwToolbox",{isToolboxLoading:"isLoading"})},watch:{isToolboxLoading:{handler(){this.isToolboxLoading||this.loadData()}}},methods:{mountedComponent(){this.loadData()},loadData(){this.isToolboxLoading||(this.checksumAvailable=this.checksumData.available,this.checksumSuccess=this.checksumData.success,this.checksumData.number_files_modified>0&&(this.fileHasModified=!0,this.fileModifiedCounterValue=!1,this.fileModified=this.checksumData.file_modified),this.checksumData.number_files_deleted>0&&(this.fileHasDeleted=!0,this.fileDeletedCounterValue=!1,this.fileDeleted=this.checksumData.file_deleted),this.fileCheckedCounterLabel=`${this.checksumData.number_files_checked}
                    ${this.$tc("lengow-connector.toolbox.checksum.file_checked")}`,this.fileModifiedCounterLabel=`${this.checksumData.number_files_modified}
                    ${this.$tc("lengow-connector.toolbox.checksum.file_modified")}`,this.fileDeletedCounterLabel=`${this.checksumData.number_files_deleted}
                    ${this.$tc("lengow-connector.toolbox.checksum.file_deleted")}`,this.isLoading=!1)}}}),n(1555);let{Component:eD}=Shopware,{mapState:eF,mapGetters:eE}=Shopware.Component.getComponentHelper();eD.register("lgw-toolbox-log",{template:'{% block lgw_toolbox_log %}\n    <div v-if="!isLoading" class="lgw-toolbox-log">\n        {% block lgw_toolbox_log_download %}\n            <sw-card :title="$tc(\'lengow-connector.toolbox.log.title\')">\n                <span class="lgw-description">{{ $tc(\'lengow-connector.toolbox.log.description\') }}</span>\n                <sw-single-select :placeholder="$tc(\'lengow-connector.toolbox.log.placeholder\')"\n                                  :options="availableLogs"\n                                  :isLoading="isLoading"\n                                  :value="logFilter"\n                                @update:value="onChangeLogFilter"\n                                @change="onChangeLogFilter"\n                >\n                </sw-single-select>\n                <sw-button v-if="showButton"\n                           variant="primary"\n                           @click="downloadLog"\n                           :isLoading="buttonIsLoading">\n                    {{ $tc(\'lengow-connector.toolbox.log.button_download\') }}\n                </sw-button>\n            </sw-card>\n        {% endblock %}\n    </div>\n    <div v-else>\n        <sw-loader></sw-loader>\n    </div>\n{% endblock %}\n',inject:["LengowConnectorToolboxService"],mixins:[],data(){return{availableLogs:[],logFilter:"",showButton:!1,isLoading:!0,buttonIsLoading:!1}},mounted(){this.mountedComponent()},computed:{...eF("lgwToolbox",["logData"]),...eE("lgwToolbox",{isToolboxLoading:"isLoading"})},watch:{isToolboxLoading:{handler(){this.isToolboxLoading||this.loadData()}}},methods:{mountedComponent(){this.loadData()},loadData(){if(!this.isToolboxLoading){let e=[],t={weekday:"long",year:"numeric",month:"long",day:"numeric"};this.logData.length>0&&(this.logData.forEach(n=>{if(null!==n.date){let o=new Date(n.date);e.push({label:o.toLocaleDateString(void 0,t),value:n.date})}}),e.push({label:this.$tc("lengow-connector.toolbox.log.download_all_files"),value:"logs"})),this.availableLogs=e,this.isLoading=!1}},onChangeLogFilter(e){this.logFilter=e,null!==this.logFilter&&""!==this.logFilter&&(this.showButton=!0)},downloadLog(){this.buttonIsLoading=!0;let e=this.logFilter;this.LengowConnectorToolboxService.downloadLog({date:e}).then(t=>{this.forceFileDownload(t,e)}).finally(()=>{this.buttonIsLoading=!1})},forceFileDownload(e,t){let n=window.URL.createObjectURL(new Blob([e.data])),o=document.createElement("a");o.href=n,o.setAttribute("download",t),document.body.appendChild(o),o.click()}}}),Shopware.Module.register("lengow-connector",{color:"#ff3d58",icon:"regular-shopping-bag-product",title:"Lengow",description:"Lengow",routes:{connection:{component:"lgw-connection",path:"connection",redirect:{name:"lengow.connector.connection.home"},children:{home:{component:"lgw-connection-home",path:"home"},cms:{component:"lgw-connection-cms",path:"cms"},catalog:{component:"lgw-connection-catalog",path:"catalog"}}},dashboard:{component:"lgw-dashboard",path:"dashboard"},product:{component:"lgw-product-list",path:"product",meta:{parentPath:"lengow.connector.dashboard"}},order:{component:"lgw-order-list",path:"order",meta:{parentPath:"lengow.connector.dashboard"}},setting:{component:"lgw-setting",path:"setting",meta:{parentPath:"lengow.connector.dashboard"}},legal:{component:"lgw-legal-notices",path:"legal",meta:{parentPath:"lengow.connector.dashboard"}},contact:{component:"lgw-contact",path:"contact",meta:{parentPath:"lengow.connector.dashboard"}},toolbox:{component:"lgw-toolbox",path:"toolbox",redirect:{name:"lengow.connector.toolbox.base"},children:{base:{component:"lgw-toolbox-base",path:"base",meta:{parentPath:"lengow.connector.dashboard"}},checksum:{component:"lgw-toolbox-checksum",path:"checksum",meta:{parentPath:"lengow.connector.dashboard"}},log:{component:"lgw-toolbox-log",path:"log",meta:{parentPath:"lengow.connector.dashboard"}}}}},routeMiddleware(e,t){"sw.order.detail"===t.name&&t.children.push({name:"lgw.order.detail",path:"/sw/order/detail/:id/lengow",component:"lgw-order-detail-extension",meta:{parentPath:"sw.order.index"}}),e(t)},navigation:[{label:"Lengow",color:"#ff3d58",path:"lengow.connector.connection",id:"lengow-connector",parent:"sw-order"}]});let eO=Shopware.Classes.ApiService;var eP=class extends eO{constructor(e,t,n="lengow"){super(e,t,n)}checkApiCredentials(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/connection/check-api-credentials`,JSON.stringify(e),{headers:t}).then(e=>eO.handleResponse(e))}connectCms(){let e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/connection/connect-cms`,{headers:e}).then(e=>eO.handleResponse(e))}getCatalogList(){let e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/connection/get-catalog-list`,{headers:e}).then(e=>eO.handleResponse(e))}saveCatalogsLinked(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/connection/save-catalogs-linked`,JSON.stringify(e),{headers:t}).then(e=>eO.handleResponse(e))}};let{ApiService:eB}=Shopware.Classes;var eN=class extends eB{constructor(e,t,n="lengow"){super(e,t,n)}getExportLink(e){let t=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/export/get-export-link`,{headers:t,params:{salesChannelId:e}}).then(e=>eB.handleResponse(e))}getExportCount(e){let t=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/export/get-export-count`,{headers:t,params:{salesChannelId:e}}).then(e=>eB.handleResponse(e))}getProductCountValue(e,t){let n=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/export/get-product-count`,{headers:n,params:{productId:e,salesChannelId:t}}).then(e=>eB.handleResponse(e))}getProductList(e){let t=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/export/get-product-list`,{headers:t,params:{salesChannelId:e}}).then(e=>eB.handleResponse(e))}};let{ApiService:eG}=Shopware.Classes;var eq=class extends eG{constructor(e,t,n="lengow"){super(e,t,n)}synchroniseOrders(){let e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/order/synchronise-orders`,{headers:e}).then(e=>eG.handleResponse(e))}reSynchroniseOrder(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/order/re-synchronise-order`,JSON.stringify(e),{headers:t}).then(e=>eG.handleResponse(e))}reImportOrder(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/order/reimport-order`,JSON.stringify(e),{headers:t}).then(e=>eG.handleResponse(e))}reImportFailedOrder(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/order/reimport-failed-order`,JSON.stringify(e),{headers:t}).then(e=>eG.handleResponse(e))}reSendAction(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/order/resend-action`,JSON.stringify(e),{headers:t}).then(e=>eG.handleResponse(e))}massReImportOrders(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/order/mass-reimport-orders`,JSON.stringify(e),{headers:t}).then(e=>eG.handleResponse(e))}massReSendActions(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/order/mass-resend-actions`,JSON.stringify(e),{headers:t}).then(e=>eG.handleResponse(e))}getAvailableMarketplaces(){let e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/order/get-available-marketplaces`,{headers:e}).then(e=>eG.handleResponse(e))}getOrderErrorMessages(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/order/get-order-errors`,JSON.stringify(e),{headers:t}).then(e=>eG.handleResponse(e))}};let ej=Shopware.Classes.ApiService;var eU=class extends ej{constructor(e,t,n="lengow"){super(e,t,n)}getPluginData(){let e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/sync/get-plugin-data`,{headers:e}).then(e=>ej.handleResponse(e))}getPluginLinks(){let e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/sync/get-plugin-links`,{headers:e}).then(e=>ej.handleResponse(e))}getAccountStatus(e){let t=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/sync/get-account-status`,{headers:t,params:{force:e}}).then(e=>ej.handleResponse(e))}remindMeLater(){let e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/sync/remind-me-later`,{headers:e}).then(e=>ej.handleResponse(e))}OnChangeRtn(e,t){let n=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/sync/save-return-tracking-numbers`,{order_id:e,return_tracking_numbers:t},{headers:n}).then(e=>ej.handleResponse(e))}OnLoadRtn(e,t){let n=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/sync/load-return-tracking-numbers`,{order_id:e,return_tracking_numbers:t},{headers:n}).then(e=>ej.handleResponse(e))}OnChangeRc(e,t){let n=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/sync/save-return-carrier`,{order_id:e,return_carrier:t},{headers:n}).then(e=>ej.handleResponse(e))}OnLoadRc(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/sync/load-return-carrier`,{order_id:e},{headers:t}).then(e=>ej.handleResponse(e))}verifyArgRtnRc(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/sync/verifyArgRtn`,{order_id:e},{headers:t}).then(e=>ej.handleResponse(e))}};let{ApiService:ez}=Shopware.Classes;var eH=class extends ez{constructor(e,t,n="lengow"){super(e,t,n)}getOverviewData(){let e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/toolbox/get-overview-data`,{headers:e}).then(e=>ez.handleResponse(e))}getChecksumData(){let e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/toolbox/get-checksum-data`,{headers:e}).then(e=>ez.handleResponse(e))}getLogData(){let e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/toolbox/get-log-data`,{headers:e}).then(e=>ez.handleResponse(e))}downloadLog(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/order/download-log`,JSON.stringify(e),{headers:t})}};let{Application:eV}=Shopware;eV.addServiceProvider("LengowConnectorConnectionService",e=>new eP(eV.getContainer("init").httpClient,e.loginService)),eV.addServiceProvider("LengowConnectorExportService",e=>new eN(eV.getContainer("init").httpClient,e.loginService)),eV.addServiceProvider("LengowConnectorOrderService",e=>new eq(eV.getContainer("init").httpClient,e.loginService)),eV.addServiceProvider("LengowConnectorSyncService",e=>new eU(eV.getContainer("init").httpClient,e.loginService)),eV.addServiceProvider("LengowConnectorToolboxService",e=>new eH(eV.getContainer("init").httpClient,e.loginService))}()})();